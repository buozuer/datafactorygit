{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "colinsdemodatafactory"
		},
		"eventbasetrigger_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/b87e2be7-4cc5-4795-8350-017440510a83/resourceGroups/colinsdemo/providers/Microsoft.Storage/storageAccounts/colinsdemoblob"
		},
		"trigger1_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/b87e2be7-4cc5-4795-8350-017440510a83/resourceGroups/colinsdemo/providers/Microsoft.Storage/storageAccounts/colinsdemoblob"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/DF_DEMO_NYCTX')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DelimitedText4",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsTable2",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "Select1"
						},
						{
							"name": "SurrogateKey1"
						},
						{
							"name": "DerivedColumn1"
						}
					],
					"script": "source(output(\n\t\tmedallion as string,\n\t\thack_license as string,\n\t\tvendor_id as string,\n\t\trate_code as string,\n\t\tstore_and_fwd_flag as string,\n\t\tpickup_datetime as string,\n\t\tdropoff_datetime as string,\n\t\tpassenger_count as string,\n\t\ttrip_time_in_secs as string,\n\t\ttrip_distance as string,\n\t\tpickup_longitude as string,\n\t\tpickup_latitude as string,\n\t\tdropoff_longitude as string,\n\t\tdropoff_latitude as string,\n\t\tpayment_type as string,\n\t\tfare_amount as string,\n\t\tsurcharge as string,\n\t\tmta_tax as string,\n\t\ttolls_amount as string,\n\t\ttotal_amount as string,\n\t\ttip_amount as string,\n\t\ttipped as string,\n\t\ttip_class as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tlimit: 100) ~> source1\nSurrogateKey1 select(mapColumn(\n\t\tmedallion,\n\t\thack_license,\n\t\tvendor_id,\n\t\trate_code,\n\t\tstore_and_fwd_flag,\n\t\tpickup_datetime,\n\t\tdropoff_datetime,\n\t\tpassenger_count,\n\t\ttrip_time_in_secs,\n\t\ttrip_distance,\n\t\tpickup_longitude,\n\t\tpickup_latitude,\n\t\tdropoff_longitude,\n\t\tdropoff_latitude,\n\t\tpayment_type,\n\t\tfare_amount,\n\t\tsurcharge,\n\t\tmta_tax,\n\t\ttolls_amount,\n\t\ttotal_amount,\n\t\ttip_amount,\n\t\ttipped\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nsource1 keyGenerate(output(Surrogatekey as long),\n\tstartAt: 1L) ~> SurrogateKey1\nSelect1 derive(weekoftheyear = weekOfYear(toTimestamp(pickup_datetime))) ~> DerivedColumn1\nDerivedColumn1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tstaged: true,\n\tmapColumn(\n\t\tmedallion,\n\t\thack_license,\n\t\tvendor_id,\n\t\trate_code,\n\t\tstore_and_fwd_flag,\n\t\tpickup_datetime,\n\t\tdropoff_datetime,\n\t\tpassenger_count,\n\t\ttrip_time_in_secs,\n\t\ttrip_distance,\n\t\tpickup_longitude,\n\t\tpickup_latitude,\n\t\tdropoff_longitude,\n\t\tdropoff_latitude,\n\t\tpayment_type,\n\t\tfare_amount,\n\t\tsurcharge,\n\t\tmta_tax,\n\t\ttolls_amount,\n\t\ttotal_amount,\n\t\ttip_amount,\n\t\ttipped,\n\t\tweekoftheyear\n\t),\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "AzureSqlSource",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSqlTarget",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\tDAY as integer,\n\t\tMONTH as integer,\n\t\tYEAR as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> source1\nsource1 sink(input(\n\t\tday as integer,\n\t\tmonth as integer,\n\t\tyear as integer,\n\t\tYEARMONTHDAY as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tday = DAY,\n\t\tmonth = MONTH,\n\t\tyear = YEAR\n\t),\n\terrorHandlingOption: 'stopOnFirstError') ~> sink1"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow3')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DelimitedText1",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSqlTable3",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\tId as string,\n\t\tMSSubClass as string,\n\t\tMSZoning as string,\n\t\tLotFrontage as string,\n\t\tLotArea as string,\n\t\tStreet as string,\n\t\tAlley as string,\n\t\tLotShape as string,\n\t\tLandContour as string,\n\t\tUtilities as string,\n\t\tLotConfig as string,\n\t\tLandSlope as string,\n\t\tNeighborhood as string,\n\t\tCondition1 as string,\n\t\tCondition2 as string,\n\t\tBldgType as string,\n\t\tHouseStyle as string,\n\t\tOverallQual as string,\n\t\tOverallCond as string,\n\t\tYearBuilt as string,\n\t\tYearRemodAdd as string,\n\t\tRoofStyle as string,\n\t\tRoofMatl as string,\n\t\tExterior1st as string,\n\t\tExterior2nd as string,\n\t\tMasVnrType as string,\n\t\tMasVnrArea as string,\n\t\tExterQual as string,\n\t\tExterCond as string,\n\t\tFoundation as string,\n\t\tBsmtQual as string,\n\t\tBsmtCond as string,\n\t\tBsmtExposure as string,\n\t\tBsmtFinType1 as string,\n\t\tBsmtFinSF1 as string,\n\t\tBsmtFinType2 as string,\n\t\tBsmtFinSF2 as string,\n\t\tBsmtUnfSF as string,\n\t\tTotalBsmtSF as string,\n\t\tHeating as string,\n\t\tHeatingQC as string,\n\t\tCentralAir as string,\n\t\tElectrical as string,\n\t\t{1stFlrSF} as string,\n\t\t{2ndFlrSF} as string,\n\t\tLowQualFinSF as string,\n\t\tGrLivArea as string,\n\t\tBsmtFullBath as string,\n\t\tBsmtHalfBath as string,\n\t\tFullBath as string,\n\t\tHalfBath as string,\n\t\tBedroomAbvGr as string,\n\t\tKitchebvGr as string,\n\t\tKitchenQual as string,\n\t\tTotRmsAbvGrd as string,\n\t\tFunctiol as string,\n\t\tFireplaces as string,\n\t\tFireplaceQu as string,\n\t\tGarageType as string,\n\t\tGarageYrBlt as string,\n\t\tGarageFinish as string,\n\t\tGarageCars as string,\n\t\tGarageArea as string,\n\t\tGarageQual as string,\n\t\tGarageCond as string,\n\t\tPavedDrive as string,\n\t\tWoodDeckSF as string,\n\t\tOpenPorchSF as string,\n\t\tEnclosedPorch as string,\n\t\t{3SsnPorch} as string,\n\t\tScreenPorch as string,\n\t\tPoolArea as string,\n\t\tPoolQC as string,\n\t\tFence as string,\n\t\tMiscFeature as string,\n\t\tMiscVal as string,\n\t\tMoSold as string,\n\t\tYrSold as string,\n\t\tSaleType as string,\n\t\tSaleCondition as string,\n\t\tSalePrice as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tlimit: 100) ~> source1\nsource1 sink(input(\n\t\tId as integer,\n\t\tMSSubClass as integer,\n\t\tMSZoning as string,\n\t\tLotFrontage as integer,\n\t\tLotArea as integer,\n\t\tStreet as string,\n\t\tAlley as string,\n\t\tLotShape as string,\n\t\tLandContour as string,\n\t\tUtilities as string,\n\t\tLotConfig as string,\n\t\tLandSlope as string,\n\t\tNeighborhood as string,\n\t\tCondition1 as string,\n\t\tCondition2 as string,\n\t\tBldgType as string,\n\t\tHouseStyle as string,\n\t\tOverallQual as integer,\n\t\tOverallCond as integer,\n\t\tYearBuilt as integer,\n\t\tYearRemodAdd as string,\n\t\tRoofStyle as string,\n\t\tRoofMatl as string,\n\t\tExterior1st as string,\n\t\tExterior2nd as string,\n\t\tMasVnrType as string,\n\t\tMasVnrArea as integer,\n\t\tExterQual as string,\n\t\tExterCond as string,\n\t\tFoundation as string,\n\t\tBsmtQual as string,\n\t\tBsmtCond as string,\n\t\tBsmtExposure as string,\n\t\tBsmtFinType1 as string,\n\t\tBsmtFinSF1 as integer,\n\t\tBsmtFinType2 as string,\n\t\tBsmtFinSF2 as integer,\n\t\tBsmtUnfSF as integer,\n\t\tTotalBsmtSF as integer,\n\t\tHeating as string,\n\t\tHeatingQC as string,\n\t\tCentralAir as string,\n\t\tElectrical as string,\n\t\t{1stFlrSF} as integer,\n\t\t{2ndFlrSF} as integer,\n\t\tLowQualFinSF as string,\n\t\tGrLivArea as integer,\n\t\tBsmtFullBath as integer,\n\t\tBsmtHalfBath as integer,\n\t\tFullBath as integer,\n\t\tHalfBath as integer,\n\t\tBedroomAbvGr as integer,\n\t\tKitchenAbvGr as integer,\n\t\tKitchenQual as string,\n\t\tTotRmsAbvGrd as integer,\n\t\tFunctional as string,\n\t\tFireplaces as integer,\n\t\tFireplaceQu as string,\n\t\tGarageType as string,\n\t\tGarageYrBlt as integer,\n\t\tGarageFinish as string,\n\t\tGarageCars as integer,\n\t\tGarageArea as integer,\n\t\tGarageQual as string,\n\t\tGarageCond as string,\n\t\tPavedDrive as string,\n\t\tWoodDeckSF as integer,\n\t\tOpenPorchSF as integer,\n\t\tEnclosedPorch as integer,\n\t\t{3SsnPorch} as integer,\n\t\tScreenPorch as integer,\n\t\tPoolArea as integer,\n\t\tPoolQC as string,\n\t\tFence as string,\n\t\tMiscFeature as string,\n\t\tMiscVal as integer,\n\t\tMoSold as integer,\n\t\tYrSold as integer,\n\t\tSaleType as string,\n\t\tSaleCondition as string,\n\t\tSalePrice as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sink1"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow4')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Json1",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsTable3",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\tdocument as string,\n\t\tlabels as (label as string, key as string, value as (page as string, text as string, boundingBoxes as double[][])[])[]\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tdocumentForm: 'documentPerLine') ~> source1\nsource1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tstaged: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/retailchurndemo')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DelimitedText3",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSqlTable4",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "DerivedColumn1"
						}
					],
					"script": "source(output(\n\t\tUserId as string,\n\t\tAge as string,\n\t\tAddress as string,\n\t\tGender as string,\n\t\tUserType as string,\n\t\tLabel as string,\n\t\tTotal_Quantity as string,\n\t\tTotal_Value as string,\n\t\tStDev_Quantity as string,\n\t\tStDev_Value as string,\n\t\tAvgTimeDelta as string,\n\t\tRecency as string,\n\t\tUnique_TransactionId as string,\n\t\tUnique_ItemId as string,\n\t\tUnique_Location as string,\n\t\tUnique_ProductCategory as string,\n\t\tTotal_Quantity_per_Unique_TransactionId as string,\n\t\tTotal_Quantity_per_Unique_ItemId as string,\n\t\tTotal_Quantity_per_Unique_Location as string,\n\t\tTotal_Quantity_per_Unique_ProductCategory as string,\n\t\tTotal_Value_per_Unique_TransactionId as string,\n\t\tTotal_Value_per_Unique_ItemId as string,\n\t\tTotal_Value_per_Unique_Location as string,\n\t\tTotal_Value_per_Unique_ProductCategory as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tpartitionBy('roundRobin', 2)) ~> source1\nsource1 derive(Label = case(Label == 'Churner',1,0)) ~> DerivedColumn1\nDerivedColumn1 sink(input(\n\t\tUserId as integer,\n\t\tAge as string,\n\t\tAddress as string,\n\t\tGender as string,\n\t\tUserType as string,\n\t\tLabel as string,\n\t\tTotal_Quantity as integer,\n\t\tTotal_Value as integer,\n\t\tStDev_Quantity as double,\n\t\tStDev_Value as double,\n\t\tAvgTimeDelta as double,\n\t\tRecency as integer,\n\t\tUnique_TransactionId as integer,\n\t\tUnique_ItemId as integer,\n\t\tUnique_Location as integer,\n\t\tUnique_ProductCategory as integer,\n\t\tTotal_Quantity_per_Unique_TransactionId as double,\n\t\tTotal_Quantity_per_Unique_ItemId as double,\n\t\tTotal_Quantity_per_Unique_Location as double,\n\t\tTotal_Quantity_per_Unique_ProductCategory as double,\n\t\tTotal_Value_per_Unique_TransactionId as double,\n\t\tTotal_Value_per_Unique_ItemId as double,\n\t\tTotal_Value_per_Unique_Location as double,\n\t\tTotal_Value_per_Unique_ProductCategory as double\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tmapColumn(\n\t\tAge,\n\t\tAddress,\n\t\tGender,\n\t\tUserType,\n\t\tLabel,\n\t\tTotal_Quantity,\n\t\tTotal_Value,\n\t\tStDev_Quantity,\n\t\tStDev_Value,\n\t\tAvgTimeDelta,\n\t\tRecency,\n\t\tUnique_TransactionId,\n\t\tUnique_ItemId,\n\t\tUnique_Location,\n\t\tUnique_ProductCategory,\n\t\tTotal_Quantity_per_Unique_TransactionId,\n\t\tTotal_Quantity_per_Unique_ItemId,\n\t\tTotal_Quantity_per_Unique_Location,\n\t\tTotal_Quantity_per_Unique_ProductCategory,\n\t\tTotal_Value_per_Unique_TransactionId,\n\t\tTotal_Value_per_Unique_ItemId,\n\t\tTotal_Value_per_Unique_Location,\n\t\tTotal_Value_per_Unique_ProductCategory,\n\t\tUserId\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sink1"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_4u9')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_4u9",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "dbo.nyctaxi_sample"
							},
							{
								"name": "Destination",
								"value": "dfstage//nytaxisample"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_4u9",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_4u9",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [
					"ingest"
				],
				"lastPublishTime": "2020-07-09T13:22:01Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_i76')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_i76",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "dbo.nyctaxi_sample"
							},
							{
								"name": "Destination",
								"value": "dfstage//nyctaxi_test_3"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_i76",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_i76",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-05-27T10:26:04Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_sbd')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_sbd",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "dbo.nyctaxi_sample"
							},
							{
								"name": "Destination",
								"value": "dfstage//"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_sbd",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_sbd",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-05-27T05:52:54Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_wk3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach_wk3",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.cw_items",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy_wk3",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "@{item().source.schema}.@{item().source.table}"
										},
										{
											"name": "Destination",
											"value": "adventureworks2019//@{item().destination.fileName}"
										}
									],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"validateDataConsistency": false
									},
									"inputs": [
										{
											"referenceName": "SourceDataset_wk3",
											"type": "DatasetReference",
											"parameters": {
												"cw_schema": "@item().source.schema",
												"cw_table": "@item().source.table"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DestinationDataset_wk3",
											"type": "DatasetReference",
											"parameters": {
												"cw_fileName": "@item().destination.fileName"
											}
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"cw_items": {
						"type": "Array",
						"defaultValue": [
							{
								"source": {
									"schema": "dbo",
									"table": "AWBuildVersion"
								},
								"destination": {
									"fileName": "dboAWBuildVersion"
								}
							},
							{
								"source": {
									"schema": "dbo",
									"table": "DatabaseLog"
								},
								"destination": {
									"fileName": "dboDatabaseLog"
								}
							},
							{
								"source": {
									"schema": "dbo",
									"table": "ErrorLog"
								},
								"destination": {
									"fileName": "dboErrorLog"
								}
							},
							{
								"source": {
									"schema": "HumanResources",
									"table": "Department"
								},
								"destination": {
									"fileName": "HumanResourcesDepartment"
								}
							},
							{
								"source": {
									"schema": "HumanResources",
									"table": "Employee"
								},
								"destination": {
									"fileName": "HumanResourcesEmployee"
								}
							},
							{
								"source": {
									"schema": "HumanResources",
									"table": "EmployeeDepartmentHistory"
								},
								"destination": {
									"fileName": "HumanResourcesEmployeeDepartmentHistory"
								}
							},
							{
								"source": {
									"schema": "HumanResources",
									"table": "EmployeePayHistory"
								},
								"destination": {
									"fileName": "HumanResourcesEmployeePayHistory"
								}
							},
							{
								"source": {
									"schema": "HumanResources",
									"table": "JobCandidate"
								},
								"destination": {
									"fileName": "HumanResourcesJobCandidate"
								}
							},
							{
								"source": {
									"schema": "HumanResources",
									"table": "Shift"
								},
								"destination": {
									"fileName": "HumanResourcesShift"
								}
							},
							{
								"source": {
									"schema": "Person",
									"table": "Address"
								},
								"destination": {
									"fileName": "PersonAddress"
								}
							},
							{
								"source": {
									"schema": "Person",
									"table": "AddressType"
								},
								"destination": {
									"fileName": "PersonAddressType"
								}
							},
							{
								"source": {
									"schema": "Person",
									"table": "BusinessEntity"
								},
								"destination": {
									"fileName": "PersonBusinessEntity"
								}
							},
							{
								"source": {
									"schema": "Person",
									"table": "BusinessEntityAddress"
								},
								"destination": {
									"fileName": "PersonBusinessEntityAddress"
								}
							},
							{
								"source": {
									"schema": "Person",
									"table": "BusinessEntityContact"
								},
								"destination": {
									"fileName": "PersonBusinessEntityContact"
								}
							},
							{
								"source": {
									"schema": "Person",
									"table": "ContactType"
								},
								"destination": {
									"fileName": "PersonContactType"
								}
							},
							{
								"source": {
									"schema": "Person",
									"table": "CountryRegion"
								},
								"destination": {
									"fileName": "PersonCountryRegion"
								}
							},
							{
								"source": {
									"schema": "Person",
									"table": "EmailAddress"
								},
								"destination": {
									"fileName": "PersonEmailAddress"
								}
							},
							{
								"source": {
									"schema": "Person",
									"table": "Password"
								},
								"destination": {
									"fileName": "PersonPassword"
								}
							},
							{
								"source": {
									"schema": "Person",
									"table": "Person"
								},
								"destination": {
									"fileName": "PersonPerson"
								}
							},
							{
								"source": {
									"schema": "Person",
									"table": "PersonPhone"
								},
								"destination": {
									"fileName": "PersonPersonPhone"
								}
							},
							{
								"source": {
									"schema": "Person",
									"table": "PhoneNumberType"
								},
								"destination": {
									"fileName": "PersonPhoneNumberType"
								}
							},
							{
								"source": {
									"schema": "Person",
									"table": "StateProvince"
								},
								"destination": {
									"fileName": "PersonStateProvince"
								}
							},
							{
								"source": {
									"schema": "Production",
									"table": "BillOfMaterials"
								},
								"destination": {
									"fileName": "ProductionBillOfMaterials"
								}
							},
							{
								"source": {
									"schema": "Production",
									"table": "Culture"
								},
								"destination": {
									"fileName": "ProductionCulture"
								}
							},
							{
								"source": {
									"schema": "Production",
									"table": "Document"
								},
								"destination": {
									"fileName": "ProductionDocument"
								}
							},
							{
								"source": {
									"schema": "Production",
									"table": "Illustration"
								},
								"destination": {
									"fileName": "ProductionIllustration"
								}
							},
							{
								"source": {
									"schema": "Production",
									"table": "Location"
								},
								"destination": {
									"fileName": "ProductionLocation"
								}
							},
							{
								"source": {
									"schema": "Production",
									"table": "Product"
								},
								"destination": {
									"fileName": "ProductionProduct"
								}
							},
							{
								"source": {
									"schema": "Production",
									"table": "ProductCategory"
								},
								"destination": {
									"fileName": "ProductionProductCategory"
								}
							},
							{
								"source": {
									"schema": "Production",
									"table": "ProductCostHistory"
								},
								"destination": {
									"fileName": "ProductionProductCostHistory"
								}
							},
							{
								"source": {
									"schema": "Production",
									"table": "ProductDescription"
								},
								"destination": {
									"fileName": "ProductionProductDescription"
								}
							},
							{
								"source": {
									"schema": "Production",
									"table": "ProductDocument"
								},
								"destination": {
									"fileName": "ProductionProductDocument"
								}
							},
							{
								"source": {
									"schema": "Production",
									"table": "ProductInventory"
								},
								"destination": {
									"fileName": "ProductionProductInventory"
								}
							},
							{
								"source": {
									"schema": "Production",
									"table": "ProductListPriceHistory"
								},
								"destination": {
									"fileName": "ProductionProductListPriceHistory"
								}
							},
							{
								"source": {
									"schema": "Production",
									"table": "ProductModel"
								},
								"destination": {
									"fileName": "ProductionProductModel"
								}
							},
							{
								"source": {
									"schema": "Production",
									"table": "ProductModelIllustration"
								},
								"destination": {
									"fileName": "ProductionProductModelIllustration"
								}
							},
							{
								"source": {
									"schema": "Production",
									"table": "ProductModelProductDescriptionCulture"
								},
								"destination": {
									"fileName": "ProductionProductModelProductDescriptionCulture"
								}
							},
							{
								"source": {
									"schema": "Production",
									"table": "ProductPhoto"
								},
								"destination": {
									"fileName": "ProductionProductPhoto"
								}
							},
							{
								"source": {
									"schema": "Production",
									"table": "ProductProductPhoto"
								},
								"destination": {
									"fileName": "ProductionProductProductPhoto"
								}
							},
							{
								"source": {
									"schema": "Production",
									"table": "ProductReview"
								},
								"destination": {
									"fileName": "ProductionProductReview"
								}
							},
							{
								"source": {
									"schema": "Production",
									"table": "ProductSubcategory"
								},
								"destination": {
									"fileName": "ProductionProductSubcategory"
								}
							},
							{
								"source": {
									"schema": "Production",
									"table": "ScrapReason"
								},
								"destination": {
									"fileName": "ProductionScrapReason"
								}
							},
							{
								"source": {
									"schema": "Production",
									"table": "TransactionHistory"
								},
								"destination": {
									"fileName": "ProductionTransactionHistory"
								}
							},
							{
								"source": {
									"schema": "Production",
									"table": "TransactionHistoryArchive"
								},
								"destination": {
									"fileName": "ProductionTransactionHistoryArchive"
								}
							},
							{
								"source": {
									"schema": "Production",
									"table": "UnitMeasure"
								},
								"destination": {
									"fileName": "ProductionUnitMeasure"
								}
							},
							{
								"source": {
									"schema": "Production",
									"table": "WorkOrder"
								},
								"destination": {
									"fileName": "ProductionWorkOrder"
								}
							},
							{
								"source": {
									"schema": "Production",
									"table": "WorkOrderRouting"
								},
								"destination": {
									"fileName": "ProductionWorkOrderRouting"
								}
							},
							{
								"source": {
									"schema": "Purchasing",
									"table": "ProductVendor"
								},
								"destination": {
									"fileName": "PurchasingProductVendor"
								}
							},
							{
								"source": {
									"schema": "Purchasing",
									"table": "PurchaseOrderDetail"
								},
								"destination": {
									"fileName": "PurchasingPurchaseOrderDetail"
								}
							},
							{
								"source": {
									"schema": "Purchasing",
									"table": "PurchaseOrderHeader"
								},
								"destination": {
									"fileName": "PurchasingPurchaseOrderHeader"
								}
							},
							{
								"source": {
									"schema": "Purchasing",
									"table": "ShipMethod"
								},
								"destination": {
									"fileName": "PurchasingShipMethod"
								}
							},
							{
								"source": {
									"schema": "Purchasing",
									"table": "Vendor"
								},
								"destination": {
									"fileName": "PurchasingVendor"
								}
							},
							{
								"source": {
									"schema": "Sales",
									"table": "CountryRegionCurrency"
								},
								"destination": {
									"fileName": "SalesCountryRegionCurrency"
								}
							},
							{
								"source": {
									"schema": "Sales",
									"table": "CreditCard"
								},
								"destination": {
									"fileName": "SalesCreditCard"
								}
							},
							{
								"source": {
									"schema": "Sales",
									"table": "Currency"
								},
								"destination": {
									"fileName": "SalesCurrency"
								}
							},
							{
								"source": {
									"schema": "Sales",
									"table": "CurrencyRate"
								},
								"destination": {
									"fileName": "SalesCurrencyRate"
								}
							},
							{
								"source": {
									"schema": "Sales",
									"table": "Customer"
								},
								"destination": {
									"fileName": "SalesCustomer"
								}
							},
							{
								"source": {
									"schema": "Sales",
									"table": "PersonCreditCard"
								},
								"destination": {
									"fileName": "SalesPersonCreditCard"
								}
							},
							{
								"source": {
									"schema": "Sales",
									"table": "SalesOrderDetail"
								},
								"destination": {
									"fileName": "SalesSalesOrderDetail"
								}
							},
							{
								"source": {
									"schema": "Sales",
									"table": "SalesOrderHeader"
								},
								"destination": {
									"fileName": "SalesSalesOrderHeader"
								}
							},
							{
								"source": {
									"schema": "Sales",
									"table": "SalesOrderHeaderSalesReason"
								},
								"destination": {
									"fileName": "SalesSalesOrderHeaderSalesReason"
								}
							},
							{
								"source": {
									"schema": "Sales",
									"table": "SalesPerson"
								},
								"destination": {
									"fileName": "SalesSalesPerson"
								}
							},
							{
								"source": {
									"schema": "Sales",
									"table": "SalesPersonQuotaHistory"
								},
								"destination": {
									"fileName": "SalesSalesPersonQuotaHistory"
								}
							},
							{
								"source": {
									"schema": "Sales",
									"table": "SalesReason"
								},
								"destination": {
									"fileName": "SalesSalesReason"
								}
							},
							{
								"source": {
									"schema": "Sales",
									"table": "SalesTaxRate"
								},
								"destination": {
									"fileName": "SalesSalesTaxRate"
								}
							},
							{
								"source": {
									"schema": "Sales",
									"table": "SalesTerritory"
								},
								"destination": {
									"fileName": "SalesSalesTerritory"
								}
							},
							{
								"source": {
									"schema": "Sales",
									"table": "SalesTerritoryHistory"
								},
								"destination": {
									"fileName": "SalesSalesTerritoryHistory"
								}
							},
							{
								"source": {
									"schema": "Sales",
									"table": "ShoppingCartItem"
								},
								"destination": {
									"fileName": "SalesShoppingCartItem"
								}
							},
							{
								"source": {
									"schema": "Sales",
									"table": "SpecialOffer"
								},
								"destination": {
									"fileName": "SalesSpecialOffer"
								}
							},
							{
								"source": {
									"schema": "Sales",
									"table": "SpecialOfferProduct"
								},
								"destination": {
									"fileName": "SalesSpecialOfferProduct"
								}
							},
							{
								"source": {
									"schema": "Sales",
									"table": "Store"
								},
								"destination": {
									"fileName": "SalesStore"
								}
							}
						]
					}
				},
				"annotations": [],
				"lastPublishTime": "2021-02-04T06:24:05Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_zul')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_zul",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "dbo.nyctaxi_sample"
							},
							{
								"name": "Destination",
								"value": "ustunberk//"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_zul",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_zul",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-04-28T11:06:20Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/NYTX_DF_DEMO')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DF_DEMO_NYCTX",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_DEMO_NYCTX",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "linkedService1",
									"type": "LinkedServiceReference"
								},
								"folderPath": "burakblob/0e3a072b-c142-4b85-82dc-d2e537fe7c51"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_DEMO_NYCTX')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Retailchurnpipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "retailchurndemo",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "retailchurndemo",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": [
					"retailchurndemo"
				],
				"lastPublishTime": "2020-08-18T08:14:36Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/retailchurndemo')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/copydata_nyctaxi')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_wuh",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "dbo.nyctaxi_sample"
							},
							{
								"name": "Destination",
								"value": "dfstage//"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_wuh",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_wuh",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [
					"ingest"
				],
				"lastPublishTime": "2020-07-09T13:21:12Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/demoactivity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_zbi",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "dbo.customer_table"
							},
							{
								"name": "Destination",
								"value": "adventureworks2019new//"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"validateDataConsistency": false
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_zbi",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_zbi",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-02-04T09:41:50Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ustunberkcopydata')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "from dsvm",
				"activities": [
					{
						"name": "Copy_3fd",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "dbo.nyctaxi_sample"
							},
							{
								"name": "Destination",
								"value": "ustunberk//"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_3fd",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_3fd",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-04-28T08:31:19Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ustunberkdemo_copydata_1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copy data from DSVM",
				"activities": [
					{
						"name": "Copy_uvi",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "dbo.nyctaxi_sample"
							},
							{
								"name": "Destination",
								"value": "ustunberk//"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_uvi",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_uvi",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-04-28T07:48:41Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ustunberkdemocopydatafromdsvm')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_2sh",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "dbo.nyctaxi_sample"
							},
							{
								"name": "Destination",
								"value": "ustunberk//"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_2sh",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_2sh",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-04-28T08:29:04Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/eventbasetrigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [
					"retailchurndemo"
				],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Retailchurnpipeline",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/eventtriggerdemo/blobs/",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('eventbasetrigger_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Retailchurnpipeline')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger1')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [
					"retailchurndemo"
				],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Retailchurnpipeline",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/eventtriggerdemo/blobs/",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('trigger1_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated",
						"Microsoft.Storage.BlobDeleted"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Retailchurnpipeline')]"
			]
		}
	]
}