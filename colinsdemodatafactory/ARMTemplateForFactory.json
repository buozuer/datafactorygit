{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "colinsdemodatafactory"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1'"
		},
		"AzureBlobStorage10_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage10'"
		},
		"AzureBlobStorage11_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage11'"
		},
		"AzureBlobStorage12_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage12'"
		},
		"AzureBlobStorage13_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage13'"
		},
		"AzureBlobStorage14_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage14'"
		},
		"AzureBlobStorage2_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage2'"
		},
		"AzureBlobStorage3_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage3'"
		},
		"AzureBlobStorage4_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage4'"
		},
		"AzureBlobStorage5_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage5'"
		},
		"AzureBlobStorage6_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage6'"
		},
		"AzureBlobStorage7_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage7'"
		},
		"AzureBlobStorage8_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage8'"
		},
		"AzureBlobStorage9_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage9'"
		},
		"AzureDatabricks_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'AzureDatabricks'"
		},
		"AzureML1_apiKey": {
			"type": "secureString",
			"metadata": "Secure string for 'apiKey' of 'AzureML1'"
		},
		"AzureML2_apiKey": {
			"type": "secureString",
			"metadata": "Secure string for 'apiKey' of 'AzureML2'"
		},
		"AzureMLService1_servicePrincipalKey": {
			"type": "secureString",
			"metadata": "Secure string for 'servicePrincipalKey' of 'AzureMLService1'"
		},
		"AzureML_OnurAirFlightTimePrediction_apiKey": {
			"type": "secureString",
			"metadata": "Secure string for 'apiKey' of 'AzureML_OnurAirFlightTimePrediction'"
		},
		"AzureSqlDatabase_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase'"
		},
		"AzureSqlDatabase1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase1'"
		},
		"AzureSqlDatabase2_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase2'"
		},
		"AzureSqlDatabase3_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase3'"
		},
		"AzureSynapseAnalytics_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSynapseAnalytics'"
		},
		"BURAK_DEMO_DB_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'BURAK_DEMO_DB'"
		},
		"DSVM_CONNECTION_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'DSVM_CONNECTION'"
		},
		"DSVM_CONNECTION_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'DSVM_CONNECTION'"
		},
		"DSVM_SQLSERVER_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'DSVM_SQLSERVER'"
		},
		"DSVM_SQLSERVER_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'DSVM_SQLSERVER'"
		},
		"OnurAirBlob_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'OnurAirBlob'"
		},
		"OnurAir_ML_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'OnurAir_ML'"
		},
		"burakblobconnection_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'burakblobconnection'"
		},
		"cogsearchblob_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'cogsearchblob'"
		},
		"linkedService1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'linkedService1'"
		},
		"onurairml_scoreddata_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'onurairml_scoreddata'"
		},
		"SourceDataset_ibi_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": "jobs_clustered.json"
		},
		"SourceDataset_ibi_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "burakblob"
		},
		"SourceDataset_q7y_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": "example_1.json"
		},
		"SourceDataset_q7y_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "burakblob"
		},
		"AzureMLService1_properties_typeProperties_subscriptionId": {
			"type": "string",
			"defaultValue": "b87e2be7-4cc5-4795-8350-017440510a83"
		},
		"AzureMLService1_properties_typeProperties_resourceGroupName": {
			"type": "string",
			"defaultValue": "burakozuermls"
		},
		"AzureMLService1_properties_typeProperties_servicePrincipalId": {
			"type": "string",
			"defaultValue": "3cbc8ebf-5e99-4c5e-8017-1e0ed57343d4"
		},
		"AzureMLService1_properties_typeProperties_tenant": {
			"type": "string",
			"defaultValue": "72f988bf-86f1-41af-91ab-2d7cd011db47"
		},
		"DSVM_CONNECTION_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "BURAK_ML_DEMO"
		},
		"DSVM_SQLSERVER_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "datasciencevm"
		},
		"eventbasetrigger_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/b87e2be7-4cc5-4795-8350-017440510a83/resourceGroups/colinsdemo/providers/Microsoft.Storage/storageAccounts/colinsdemoblob"
		},
		"trigger1_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/b87e2be7-4cc5-4795-8350-017440510a83/resourceGroups/colinsdemo/providers/Microsoft.Storage/storageAccounts/colinsdemoblob"
		},
		"dataFactory_properties_globalParameters_DEMO_value": {
			"type": "string",
			"defaultValue": "DEMO"
		},
		"dataFactory_properties_globalParameters_demo2_value": {
			"type": "string",
			"defaultValue": "demo2"
		},
		"dataFactory_location": {
			"type": "string",
			"defaultValue": "northeurope"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_4u9')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_4u9",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "dbo.nyctaxi_sample"
							},
							{
								"name": "Destination",
								"value": "dfstage//nytaxisample"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_4u9",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_4u9",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [
					"ingest"
				],
				"lastPublishTime": "2020-07-09T13:22:01Z"
			},
			"dependsOn": [
				"[variables('factoryId')]",
				"[concat(variables('factoryId'), '/datasets/SourceDataset_4u9')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_4u9')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_9m6')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_9m6",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "elementcogsearch//AzureDB.xlsx"
							},
							{
								"name": "Destination",
								"value": ".Azure Blob Storage file"
							}
						],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								},
								"tableOption": "autoCreate",
								"disableMetricsCollection": true
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "cogsearchblob",
										"type": "LinkedServiceReference"
									}
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ServiceName",
											"type": "String"
										},
										"sink": {
											"name": "ServiceName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ServiceType",
											"type": "String"
										},
										"sink": {
											"name": "ServiceType",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Capability",
											"type": "String"
										},
										"sink": {
											"name": "Capability",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "HierarchyLevelLowest",
											"type": "String"
										},
										"sink": {
											"name": "HierarchyLevelLowest",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "HierarchyLevel4",
											"type": "String"
										},
										"sink": {
											"name": "HierarchyLevel4",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "HierarchyLevel3",
											"type": "String"
										},
										"sink": {
											"name": "HierarchyLevel3",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "HierarchyLevel2",
											"type": "String"
										},
										"sink": {
											"name": "HierarchyLevel2",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "HierarchyLevel1",
											"type": "String"
										},
										"sink": {
											"name": "HierarchyLevel1",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Specification",
											"type": "String"
										},
										"sink": {
											"name": "Specification",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Material",
											"type": "String"
										},
										"sink": {
											"name": "Material",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "LabName",
											"type": "String"
										},
										"sink": {
											"name": "LabName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Country",
											"type": "String"
										},
										"sink": {
											"name": "Country",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Continent",
											"type": "String"
										},
										"sink": {
											"name": "Continent",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_9m6",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_9m6",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-12-07T05:33:18Z"
			},
			"dependsOn": [
				"[variables('factoryId')]",
				"[concat(variables('factoryId'), '/datasets/SourceDataset_9m6')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_9m6')]",
				"[concat(variables('factoryId'), '/linkedServices/cogsearchblob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_i76')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_i76",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "dbo.nyctaxi_sample"
							},
							{
								"name": "Destination",
								"value": "dfstage//nyctaxi_test_3"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_i76",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_i76",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-05-27T10:26:04Z"
			},
			"dependsOn": [
				"[variables('factoryId')]",
				"[concat(variables('factoryId'), '/datasets/SourceDataset_i76')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_i76')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_sbd')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_sbd",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "dbo.nyctaxi_sample"
							},
							{
								"name": "Destination",
								"value": "dfstage//"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_sbd",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_sbd",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-05-27T05:52:54Z"
			},
			"dependsOn": [
				"[variables('factoryId')]",
				"[concat(variables('factoryId'), '/datasets/SourceDataset_sbd')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_sbd')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_wk3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach_wk3",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.cw_items",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy_wk3",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "@{item().source.schema}.@{item().source.table}"
										},
										{
											"name": "Destination",
											"value": "adventureworks2019//@{item().destination.fileName}"
										}
									],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"validateDataConsistency": false
									},
									"inputs": [
										{
											"referenceName": "SourceDataset_wk3",
											"type": "DatasetReference",
											"parameters": {
												"cw_schema": "@item().source.schema",
												"cw_table": "@item().source.table"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DestinationDataset_wk3",
											"type": "DatasetReference",
											"parameters": {
												"cw_fileName": "@item().destination.fileName"
											}
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"cw_items": {
						"type": "Array",
						"defaultValue": [
							{
								"source": {
									"schema": "dbo",
									"table": "AWBuildVersion"
								},
								"destination": {
									"fileName": "dboAWBuildVersion"
								}
							},
							{
								"source": {
									"schema": "dbo",
									"table": "DatabaseLog"
								},
								"destination": {
									"fileName": "dboDatabaseLog"
								}
							},
							{
								"source": {
									"schema": "dbo",
									"table": "ErrorLog"
								},
								"destination": {
									"fileName": "dboErrorLog"
								}
							},
							{
								"source": {
									"schema": "HumanResources",
									"table": "Department"
								},
								"destination": {
									"fileName": "HumanResourcesDepartment"
								}
							},
							{
								"source": {
									"schema": "HumanResources",
									"table": "Employee"
								},
								"destination": {
									"fileName": "HumanResourcesEmployee"
								}
							},
							{
								"source": {
									"schema": "HumanResources",
									"table": "EmployeeDepartmentHistory"
								},
								"destination": {
									"fileName": "HumanResourcesEmployeeDepartmentHistory"
								}
							},
							{
								"source": {
									"schema": "HumanResources",
									"table": "EmployeePayHistory"
								},
								"destination": {
									"fileName": "HumanResourcesEmployeePayHistory"
								}
							},
							{
								"source": {
									"schema": "HumanResources",
									"table": "JobCandidate"
								},
								"destination": {
									"fileName": "HumanResourcesJobCandidate"
								}
							},
							{
								"source": {
									"schema": "HumanResources",
									"table": "Shift"
								},
								"destination": {
									"fileName": "HumanResourcesShift"
								}
							},
							{
								"source": {
									"schema": "Person",
									"table": "Address"
								},
								"destination": {
									"fileName": "PersonAddress"
								}
							},
							{
								"source": {
									"schema": "Person",
									"table": "AddressType"
								},
								"destination": {
									"fileName": "PersonAddressType"
								}
							},
							{
								"source": {
									"schema": "Person",
									"table": "BusinessEntity"
								},
								"destination": {
									"fileName": "PersonBusinessEntity"
								}
							},
							{
								"source": {
									"schema": "Person",
									"table": "BusinessEntityAddress"
								},
								"destination": {
									"fileName": "PersonBusinessEntityAddress"
								}
							},
							{
								"source": {
									"schema": "Person",
									"table": "BusinessEntityContact"
								},
								"destination": {
									"fileName": "PersonBusinessEntityContact"
								}
							},
							{
								"source": {
									"schema": "Person",
									"table": "ContactType"
								},
								"destination": {
									"fileName": "PersonContactType"
								}
							},
							{
								"source": {
									"schema": "Person",
									"table": "CountryRegion"
								},
								"destination": {
									"fileName": "PersonCountryRegion"
								}
							},
							{
								"source": {
									"schema": "Person",
									"table": "EmailAddress"
								},
								"destination": {
									"fileName": "PersonEmailAddress"
								}
							},
							{
								"source": {
									"schema": "Person",
									"table": "Password"
								},
								"destination": {
									"fileName": "PersonPassword"
								}
							},
							{
								"source": {
									"schema": "Person",
									"table": "Person"
								},
								"destination": {
									"fileName": "PersonPerson"
								}
							},
							{
								"source": {
									"schema": "Person",
									"table": "PersonPhone"
								},
								"destination": {
									"fileName": "PersonPersonPhone"
								}
							},
							{
								"source": {
									"schema": "Person",
									"table": "PhoneNumberType"
								},
								"destination": {
									"fileName": "PersonPhoneNumberType"
								}
							},
							{
								"source": {
									"schema": "Person",
									"table": "StateProvince"
								},
								"destination": {
									"fileName": "PersonStateProvince"
								}
							},
							{
								"source": {
									"schema": "Production",
									"table": "BillOfMaterials"
								},
								"destination": {
									"fileName": "ProductionBillOfMaterials"
								}
							},
							{
								"source": {
									"schema": "Production",
									"table": "Culture"
								},
								"destination": {
									"fileName": "ProductionCulture"
								}
							},
							{
								"source": {
									"schema": "Production",
									"table": "Document"
								},
								"destination": {
									"fileName": "ProductionDocument"
								}
							},
							{
								"source": {
									"schema": "Production",
									"table": "Illustration"
								},
								"destination": {
									"fileName": "ProductionIllustration"
								}
							},
							{
								"source": {
									"schema": "Production",
									"table": "Location"
								},
								"destination": {
									"fileName": "ProductionLocation"
								}
							},
							{
								"source": {
									"schema": "Production",
									"table": "Product"
								},
								"destination": {
									"fileName": "ProductionProduct"
								}
							},
							{
								"source": {
									"schema": "Production",
									"table": "ProductCategory"
								},
								"destination": {
									"fileName": "ProductionProductCategory"
								}
							},
							{
								"source": {
									"schema": "Production",
									"table": "ProductCostHistory"
								},
								"destination": {
									"fileName": "ProductionProductCostHistory"
								}
							},
							{
								"source": {
									"schema": "Production",
									"table": "ProductDescription"
								},
								"destination": {
									"fileName": "ProductionProductDescription"
								}
							},
							{
								"source": {
									"schema": "Production",
									"table": "ProductDocument"
								},
								"destination": {
									"fileName": "ProductionProductDocument"
								}
							},
							{
								"source": {
									"schema": "Production",
									"table": "ProductInventory"
								},
								"destination": {
									"fileName": "ProductionProductInventory"
								}
							},
							{
								"source": {
									"schema": "Production",
									"table": "ProductListPriceHistory"
								},
								"destination": {
									"fileName": "ProductionProductListPriceHistory"
								}
							},
							{
								"source": {
									"schema": "Production",
									"table": "ProductModel"
								},
								"destination": {
									"fileName": "ProductionProductModel"
								}
							},
							{
								"source": {
									"schema": "Production",
									"table": "ProductModelIllustration"
								},
								"destination": {
									"fileName": "ProductionProductModelIllustration"
								}
							},
							{
								"source": {
									"schema": "Production",
									"table": "ProductModelProductDescriptionCulture"
								},
								"destination": {
									"fileName": "ProductionProductModelProductDescriptionCulture"
								}
							},
							{
								"source": {
									"schema": "Production",
									"table": "ProductPhoto"
								},
								"destination": {
									"fileName": "ProductionProductPhoto"
								}
							},
							{
								"source": {
									"schema": "Production",
									"table": "ProductProductPhoto"
								},
								"destination": {
									"fileName": "ProductionProductProductPhoto"
								}
							},
							{
								"source": {
									"schema": "Production",
									"table": "ProductReview"
								},
								"destination": {
									"fileName": "ProductionProductReview"
								}
							},
							{
								"source": {
									"schema": "Production",
									"table": "ProductSubcategory"
								},
								"destination": {
									"fileName": "ProductionProductSubcategory"
								}
							},
							{
								"source": {
									"schema": "Production",
									"table": "ScrapReason"
								},
								"destination": {
									"fileName": "ProductionScrapReason"
								}
							},
							{
								"source": {
									"schema": "Production",
									"table": "TransactionHistory"
								},
								"destination": {
									"fileName": "ProductionTransactionHistory"
								}
							},
							{
								"source": {
									"schema": "Production",
									"table": "TransactionHistoryArchive"
								},
								"destination": {
									"fileName": "ProductionTransactionHistoryArchive"
								}
							},
							{
								"source": {
									"schema": "Production",
									"table": "UnitMeasure"
								},
								"destination": {
									"fileName": "ProductionUnitMeasure"
								}
							},
							{
								"source": {
									"schema": "Production",
									"table": "WorkOrder"
								},
								"destination": {
									"fileName": "ProductionWorkOrder"
								}
							},
							{
								"source": {
									"schema": "Production",
									"table": "WorkOrderRouting"
								},
								"destination": {
									"fileName": "ProductionWorkOrderRouting"
								}
							},
							{
								"source": {
									"schema": "Purchasing",
									"table": "ProductVendor"
								},
								"destination": {
									"fileName": "PurchasingProductVendor"
								}
							},
							{
								"source": {
									"schema": "Purchasing",
									"table": "PurchaseOrderDetail"
								},
								"destination": {
									"fileName": "PurchasingPurchaseOrderDetail"
								}
							},
							{
								"source": {
									"schema": "Purchasing",
									"table": "PurchaseOrderHeader"
								},
								"destination": {
									"fileName": "PurchasingPurchaseOrderHeader"
								}
							},
							{
								"source": {
									"schema": "Purchasing",
									"table": "ShipMethod"
								},
								"destination": {
									"fileName": "PurchasingShipMethod"
								}
							},
							{
								"source": {
									"schema": "Purchasing",
									"table": "Vendor"
								},
								"destination": {
									"fileName": "PurchasingVendor"
								}
							},
							{
								"source": {
									"schema": "Sales",
									"table": "CountryRegionCurrency"
								},
								"destination": {
									"fileName": "SalesCountryRegionCurrency"
								}
							},
							{
								"source": {
									"schema": "Sales",
									"table": "CreditCard"
								},
								"destination": {
									"fileName": "SalesCreditCard"
								}
							},
							{
								"source": {
									"schema": "Sales",
									"table": "Currency"
								},
								"destination": {
									"fileName": "SalesCurrency"
								}
							},
							{
								"source": {
									"schema": "Sales",
									"table": "CurrencyRate"
								},
								"destination": {
									"fileName": "SalesCurrencyRate"
								}
							},
							{
								"source": {
									"schema": "Sales",
									"table": "Customer"
								},
								"destination": {
									"fileName": "SalesCustomer"
								}
							},
							{
								"source": {
									"schema": "Sales",
									"table": "PersonCreditCard"
								},
								"destination": {
									"fileName": "SalesPersonCreditCard"
								}
							},
							{
								"source": {
									"schema": "Sales",
									"table": "SalesOrderDetail"
								},
								"destination": {
									"fileName": "SalesSalesOrderDetail"
								}
							},
							{
								"source": {
									"schema": "Sales",
									"table": "SalesOrderHeader"
								},
								"destination": {
									"fileName": "SalesSalesOrderHeader"
								}
							},
							{
								"source": {
									"schema": "Sales",
									"table": "SalesOrderHeaderSalesReason"
								},
								"destination": {
									"fileName": "SalesSalesOrderHeaderSalesReason"
								}
							},
							{
								"source": {
									"schema": "Sales",
									"table": "SalesPerson"
								},
								"destination": {
									"fileName": "SalesSalesPerson"
								}
							},
							{
								"source": {
									"schema": "Sales",
									"table": "SalesPersonQuotaHistory"
								},
								"destination": {
									"fileName": "SalesSalesPersonQuotaHistory"
								}
							},
							{
								"source": {
									"schema": "Sales",
									"table": "SalesReason"
								},
								"destination": {
									"fileName": "SalesSalesReason"
								}
							},
							{
								"source": {
									"schema": "Sales",
									"table": "SalesTaxRate"
								},
								"destination": {
									"fileName": "SalesSalesTaxRate"
								}
							},
							{
								"source": {
									"schema": "Sales",
									"table": "SalesTerritory"
								},
								"destination": {
									"fileName": "SalesSalesTerritory"
								}
							},
							{
								"source": {
									"schema": "Sales",
									"table": "SalesTerritoryHistory"
								},
								"destination": {
									"fileName": "SalesSalesTerritoryHistory"
								}
							},
							{
								"source": {
									"schema": "Sales",
									"table": "ShoppingCartItem"
								},
								"destination": {
									"fileName": "SalesShoppingCartItem"
								}
							},
							{
								"source": {
									"schema": "Sales",
									"table": "SpecialOffer"
								},
								"destination": {
									"fileName": "SalesSpecialOffer"
								}
							},
							{
								"source": {
									"schema": "Sales",
									"table": "SpecialOfferProduct"
								},
								"destination": {
									"fileName": "SalesSpecialOfferProduct"
								}
							},
							{
								"source": {
									"schema": "Sales",
									"table": "Store"
								},
								"destination": {
									"fileName": "SalesStore"
								}
							}
						]
					}
				},
				"annotations": [],
				"lastPublishTime": "2021-02-04T06:24:05Z"
			},
			"dependsOn": [
				"[variables('factoryId')]",
				"[concat(variables('factoryId'), '/datasets/SourceDataset_wk3')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_wk3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_zul')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_zul",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "dbo.nyctaxi_sample"
							},
							{
								"name": "Destination",
								"value": "ustunberk//"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_zul",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_zul",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-04-28T11:06:20Z"
			},
			"dependsOn": [
				"[variables('factoryId')]",
				"[concat(variables('factoryId'), '/datasets/SourceDataset_zul')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_zul')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/NYTX_DF_DEMO')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DF_DEMO_NYCTX",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_DEMO_NYCTX",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "linkedService1",
									"type": "LinkedServiceReference"
								},
								"folderPath": "burakblob/0e3a072b-c142-4b85-82dc-d2e537fe7c51"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[variables('factoryId')]",
				"[concat(variables('factoryId'), '/dataflows/DF_DEMO_NYCTX')]",
				"[concat(variables('factoryId'), '/linkedServices/linkedService1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Retailchurnpipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "retailchurndemo",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "retailchurndemo",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": [
					"retailchurndemo"
				],
				"lastPublishTime": "2020-08-18T08:14:36Z"
			},
			"dependsOn": [
				"[variables('factoryId')]",
				"[concat(variables('factoryId'), '/dataflows/retailchurndemo')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/adfdatabricksdemo')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Notebook1",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/adftutorial/mynotebook",
							"baseParameters": {
								"input": {
									"value": "@pipeline().parameters.name",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"name": {
						"type": "string"
					}
				},
				"annotations": [],
				"lastPublishTime": "2020-08-25T07:05:59Z"
			},
			"dependsOn": [
				"[variables('factoryId')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricks')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/copydata_nyctaxi')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_wuh",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "dbo.nyctaxi_sample"
							},
							{
								"name": "Destination",
								"value": "dfstage//"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_wuh",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_wuh",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [
					"ingest"
				],
				"lastPublishTime": "2020-07-09T13:21:12Z"
			},
			"dependsOn": [
				"[variables('factoryId')]",
				"[concat(variables('factoryId'), '/datasets/SourceDataset_wuh')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_wuh')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/demoactivity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_zbi",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "dbo.customer_table"
							},
							{
								"name": "Destination",
								"value": "adventureworks2019new//"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"validateDataConsistency": false
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_zbi",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_zbi",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-02-04T09:41:50Z"
			},
			"dependsOn": [
				"[variables('factoryId')]",
				"[concat(variables('factoryId'), '/datasets/SourceDataset_zbi')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_zbi')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/democopydata')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_xie",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "burakblob//CRMChurnData.csv"
							},
							{
								"name": "Destination",
								"value": "burakblob//"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings",
									"skipLineCount": 0
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_xie",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_xie",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-04-21T12:25:38Z"
			},
			"dependsOn": [
				"[variables('factoryId')]",
				"[concat(variables('factoryId'), '/datasets/SourceDataset_xie')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_xie')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/jsoncennet')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_ibi",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "burakblob/jobs_clustered.json"
							},
							{
								"name": "Destination",
								"value": "[[dbo].[cennet_jsonnn]"
							}
						],
						"typeProperties": {
							"source": {
								"type": "BlobSource",
								"recursive": true
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "cluster_list",
											"type": "String"
										},
										"sink": {
											"name": "cluster_list",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "status.code",
											"type": "String"
										},
										"sink": {
											"name": "status_code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "status.msg",
											"type": "String"
										},
										"sink": {
											"name": "status_msg",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "status.credits",
											"type": "String"
										},
										"sink": {
											"name": "status_credits",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "status.remaining_credits",
											"type": "String"
										},
										"sink": {
											"name": "status_remaining_credits",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_ibi",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_ibi",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2019-07-01T15:06:47Z"
			},
			"dependsOn": [
				"[variables('factoryId')]",
				"[concat(variables('factoryId'), '/datasets/SourceDataset_ibi')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_ibi')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/jsontosql')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_q7y",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "burakblob/example_1.json"
							},
							{
								"name": "Destination",
								"value": "[[dbo].[cennet_deneme]"
							}
						],
						"typeProperties": {
							"source": {
								"type": "BlobSource",
								"recursive": true
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"redirectIncompatibleRowSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage14",
									"type": "LinkedServiceReference"
								},
								"path": "burakblob"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "fruit",
											"type": "String"
										},
										"sink": {
											"name": "fruit",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "size",
											"type": "String"
										},
										"sink": {
											"name": "size",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "color",
											"type": "String"
										},
										"sink": {
											"name": "colour",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_q7y",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_q7y",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2019-07-01T14:55:57Z"
			},
			"dependsOn": [
				"[variables('factoryId')]",
				"[concat(variables('factoryId'), '/datasets/SourceDataset_q7y')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_q7y')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage14')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/onurair_ml_scoreddata')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_yqa",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "azureml-blobstore-d485de1e-bee0-44a1-8091-7417e6f5959c/azureml/83761bd2-ed25-4b3d-b5d1-bff000398d85/Scored_dataset/data.dataset.parquet"
							},
							{
								"name": "Destination",
								"value": "dbo.OnurAir_ML_Scored"
							}
						],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Ucusun_Gerceklestigi_Ay",
											"type": "UTF8"
										},
										"sink": {
											"name": "Ucusun_Gerceklestigi_Ay",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Ucusun_Gun_Grubu",
											"type": "UTF8"
										},
										"sink": {
											"name": "Ucusun_Gun_Grubu",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Ucus_Vakti_Kalkis",
											"type": "UTF8"
										},
										"sink": {
											"name": "Ucus_Vakti_Kalkis",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Ucus_Vakti_Varis",
											"type": "UTF8"
										},
										"sink": {
											"name": "Ucus_Vakti_Varis",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Rota",
											"type": "UTF8"
										},
										"sink": {
											"name": "Rota",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Kalkis_Havalimani",
											"type": "UTF8"
										},
										"sink": {
											"name": "Kalkis_Havalimani",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Inis_Havalimani",
											"type": "UTF8"
										},
										"sink": {
											"name": "Inis_Havalimani",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Departure_Country",
											"type": "UTF8"
										},
										"sink": {
											"name": "Departure_Country",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Arrival_Country",
											"type": "UTF8"
										},
										"sink": {
											"name": "Arrival_Country",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Acil_Inis_Meydani",
											"type": "UTF8"
										},
										"sink": {
											"name": "Acil_Inis_Meydani",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Ucak_Kuyruk_Kodu",
											"type": "UTF8"
										},
										"sink": {
											"name": "Ucak_Kuyruk_Kodu",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Ucak_Tipi",
											"type": "UTF8"
										},
										"sink": {
											"name": "Ucak_Tipi",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Yolcu_Kapasitesi",
											"type": "INT64"
										},
										"sink": {
											"name": "Yolcu_Kapasitesi",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Ekip_Sayisi",
											"type": "INT64"
										},
										"sink": {
											"name": "Ekip_Sayisi",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Toplam_Yolcu_Sayisi",
											"type": "INT64"
										},
										"sink": {
											"name": "Toplam_Yolcu_Sayisi",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Ucagin_Havada_Kalma_Suresi",
											"type": "INT64"
										},
										"sink": {
											"name": "Ucagin_Havada_Kalma_Suresi",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Ucagin_Havada_Kalma_Suresi_ex",
											"type": "INT64"
										},
										"sink": {
											"name": "Ucagin_Havada_Kalma_Suresi_ex",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Kus_Bakisi_Mesafe",
											"type": "UTF8"
										},
										"sink": {
											"name": "Kus_Bakisi_Mesafe",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Ucagin_Mak_Kalkis_Agirligi",
											"type": "UTF8"
										},
										"sink": {
											"name": "Ucagin_Mak_Kalkis_Agirligi",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Yakit_Tuketim_Ortalamasi",
											"type": "UTF8"
										},
										"sink": {
											"name": "Yakit_Tuketim_Ortalamasi",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Scored Labels",
											"type": "DOUBLE"
										},
										"sink": {
											"name": "Scored_Labels",
											"type": "Double"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_yqa",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_yqa",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2019-12-22T22:50:09Z"
			},
			"dependsOn": [
				"[variables('factoryId')]",
				"[concat(variables('factoryId'), '/datasets/SourceDataset_yqa')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_yqa')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ML Batch Execution1",
						"type": "AzureMLBatchExecution",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"webServiceInputs": {
								"input1": {
									"filePath": "colinsdemoblob/colinsdemo_testdata.csv",
									"linkedServiceName": {
										"referenceName": "AzureBlobStorage10",
										"type": "LinkedServiceReference"
									}
								}
							},
							"webServiceOutputs": {
								"output1": {
									"filePath": "colinsdemooutput",
									"linkedServiceName": {
										"referenceName": "AzureBlobStorage11",
										"type": "LinkedServiceReference"
									}
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureML1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2019-06-10T15:52:06Z"
			},
			"dependsOn": [
				"[variables('factoryId')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureML1')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage10')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage11')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ustunberkcopydata')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "from dsvm",
				"activities": [
					{
						"name": "Copy_3fd",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "dbo.nyctaxi_sample"
							},
							{
								"name": "Destination",
								"value": "ustunberk//"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_3fd",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_3fd",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-04-28T08:31:19Z"
			},
			"dependsOn": [
				"[variables('factoryId')]",
				"[concat(variables('factoryId'), '/datasets/SourceDataset_3fd')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_3fd')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ustunberkdemo_copydata_1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copy data from DSVM",
				"activities": [
					{
						"name": "Copy_uvi",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "dbo.nyctaxi_sample"
							},
							{
								"name": "Destination",
								"value": "ustunberk//"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_uvi",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_uvi",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-04-28T07:48:41Z"
			},
			"dependsOn": [
				"[variables('factoryId')]",
				"[concat(variables('factoryId'), '/datasets/SourceDataset_uvi')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_uvi')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ustunberkdemocopydatafromdsvm')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_2sh",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "dbo.nyctaxi_sample"
							},
							{
								"name": "Destination",
								"value": "ustunberk//"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_2sh",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_2sh",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-04-28T08:29:04Z"
			},
			"dependsOn": [
				"[variables('factoryId')]",
				"[concat(variables('factoryId'), '/datasets/SourceDataset_2sh')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_2sh')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlSource')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "DAY",
						"type": "int",
						"precision": 10
					},
					{
						"name": "MONTH",
						"type": "int",
						"precision": 10
					},
					{
						"name": "YEAR",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "dates"
				}
			},
			"dependsOn": [
				"[variables('factoryId')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "kaggle_train"
				}
			},
			"dependsOn": [
				"[variables('factoryId')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "MSSubClass",
						"type": "int",
						"precision": 10
					},
					{
						"name": "MSZoning",
						"type": "varchar"
					},
					{
						"name": "LotFrontage",
						"type": "int",
						"precision": 10
					},
					{
						"name": "LotArea",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Street",
						"type": "varchar"
					},
					{
						"name": "Alley",
						"type": "varchar"
					},
					{
						"name": "LotShape",
						"type": "varchar"
					},
					{
						"name": "LandContour",
						"type": "varchar"
					},
					{
						"name": "Utilities",
						"type": "varchar"
					},
					{
						"name": "LotConfig",
						"type": "varchar"
					},
					{
						"name": "LandSlope",
						"type": "varchar"
					},
					{
						"name": "Neighborhood",
						"type": "varchar"
					},
					{
						"name": "Condition1",
						"type": "varchar"
					},
					{
						"name": "Condition2",
						"type": "varchar"
					},
					{
						"name": "BldgType",
						"type": "varchar"
					},
					{
						"name": "HouseStyle",
						"type": "varchar"
					},
					{
						"name": "OverallQual",
						"type": "int",
						"precision": 10
					},
					{
						"name": "OverallCond",
						"type": "int",
						"precision": 10
					},
					{
						"name": "YearBuilt",
						"type": "int",
						"precision": 10
					},
					{
						"name": "YearRemodAdd",
						"type": "varchar"
					},
					{
						"name": "RoofStyle",
						"type": "varchar"
					},
					{
						"name": "RoofMatl",
						"type": "varchar"
					},
					{
						"name": "Exterior1st",
						"type": "varchar"
					},
					{
						"name": "Exterior2nd",
						"type": "varchar"
					},
					{
						"name": "MasVnrType",
						"type": "varchar"
					},
					{
						"name": "MasVnrArea",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ExterQual",
						"type": "varchar"
					},
					{
						"name": "ExterCond",
						"type": "varchar"
					},
					{
						"name": "Foundation",
						"type": "varchar"
					},
					{
						"name": "BsmtQual",
						"type": "varchar"
					},
					{
						"name": "BsmtCond",
						"type": "varchar"
					},
					{
						"name": "BsmtExposure",
						"type": "varchar"
					},
					{
						"name": "BsmtFinType1",
						"type": "varchar"
					},
					{
						"name": "BsmtFinSF1",
						"type": "int",
						"precision": 10
					},
					{
						"name": "BsmtFinType2",
						"type": "varchar"
					},
					{
						"name": "BsmtFinSF2",
						"type": "int",
						"precision": 10
					},
					{
						"name": "BsmtUnfSF",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TotalBsmtSF",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Heating",
						"type": "varchar"
					},
					{
						"name": "HeatingQC",
						"type": "varchar"
					},
					{
						"name": "CentralAir",
						"type": "varchar"
					},
					{
						"name": "Electrical",
						"type": "varchar"
					},
					{
						"name": "1stFlrSF",
						"type": "int",
						"precision": 10
					},
					{
						"name": "2ndFlrSF",
						"type": "int",
						"precision": 10
					},
					{
						"name": "LowQualFinSF",
						"type": "varchar"
					},
					{
						"name": "GrLivArea",
						"type": "int",
						"precision": 10
					},
					{
						"name": "BsmtFullBath",
						"type": "int",
						"precision": 10
					},
					{
						"name": "BsmtHalfBath",
						"type": "int",
						"precision": 10
					},
					{
						"name": "FullBath",
						"type": "int",
						"precision": 10
					},
					{
						"name": "HalfBath",
						"type": "int",
						"precision": 10
					},
					{
						"name": "BedroomAbvGr",
						"type": "int",
						"precision": 10
					},
					{
						"name": "KitchenAbvGr",
						"type": "int",
						"precision": 10
					},
					{
						"name": "KitchenQual",
						"type": "varchar"
					},
					{
						"name": "TotRmsAbvGrd",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Functional",
						"type": "varchar"
					},
					{
						"name": "Fireplaces",
						"type": "int",
						"precision": 10
					},
					{
						"name": "FireplaceQu",
						"type": "varchar"
					},
					{
						"name": "GarageType",
						"type": "varchar"
					},
					{
						"name": "GarageYrBlt",
						"type": "int",
						"precision": 10
					},
					{
						"name": "GarageFinish",
						"type": "varchar"
					},
					{
						"name": "GarageCars",
						"type": "int",
						"precision": 10
					},
					{
						"name": "GarageArea",
						"type": "int",
						"precision": 10
					},
					{
						"name": "GarageQual",
						"type": "varchar"
					},
					{
						"name": "GarageCond",
						"type": "varchar"
					},
					{
						"name": "PavedDrive",
						"type": "varchar"
					},
					{
						"name": "WoodDeckSF",
						"type": "int",
						"precision": 10
					},
					{
						"name": "OpenPorchSF",
						"type": "int",
						"precision": 10
					},
					{
						"name": "EnclosedPorch",
						"type": "int",
						"precision": 10
					},
					{
						"name": "3SsnPorch",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ScreenPorch",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PoolArea",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PoolQC",
						"type": "varchar"
					},
					{
						"name": "Fence",
						"type": "varchar"
					},
					{
						"name": "MiscFeature",
						"type": "varchar"
					},
					{
						"name": "MiscVal",
						"type": "int",
						"precision": 10
					},
					{
						"name": "MoSold",
						"type": "int",
						"precision": 10
					},
					{
						"name": "YrSold",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SaleType",
						"type": "varchar"
					},
					{
						"name": "SaleCondition",
						"type": "varchar"
					},
					{
						"name": "SalePrice",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "kaggle_train"
				}
			},
			"dependsOn": [
				"[variables('factoryId')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "MSSubClass",
						"type": "int",
						"precision": 10
					},
					{
						"name": "MSZoning",
						"type": "varchar"
					},
					{
						"name": "LotFrontage",
						"type": "int",
						"precision": 10
					},
					{
						"name": "LotArea",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Street",
						"type": "varchar"
					},
					{
						"name": "Alley",
						"type": "varchar"
					},
					{
						"name": "LotShape",
						"type": "varchar"
					},
					{
						"name": "LandContour",
						"type": "varchar"
					},
					{
						"name": "Utilities",
						"type": "varchar"
					},
					{
						"name": "LotConfig",
						"type": "varchar"
					},
					{
						"name": "LandSlope",
						"type": "varchar"
					},
					{
						"name": "Neighborhood",
						"type": "varchar"
					},
					{
						"name": "Condition1",
						"type": "varchar"
					},
					{
						"name": "Condition2",
						"type": "varchar"
					},
					{
						"name": "BldgType",
						"type": "varchar"
					},
					{
						"name": "HouseStyle",
						"type": "varchar"
					},
					{
						"name": "OverallQual",
						"type": "int",
						"precision": 10
					},
					{
						"name": "OverallCond",
						"type": "int",
						"precision": 10
					},
					{
						"name": "YearBuilt",
						"type": "int",
						"precision": 10
					},
					{
						"name": "YearRemodAdd",
						"type": "varchar"
					},
					{
						"name": "RoofStyle",
						"type": "varchar"
					},
					{
						"name": "RoofMatl",
						"type": "varchar"
					},
					{
						"name": "Exterior1st",
						"type": "varchar"
					},
					{
						"name": "Exterior2nd",
						"type": "varchar"
					},
					{
						"name": "MasVnrType",
						"type": "varchar"
					},
					{
						"name": "MasVnrArea",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ExterQual",
						"type": "varchar"
					},
					{
						"name": "ExterCond",
						"type": "varchar"
					},
					{
						"name": "Foundation",
						"type": "varchar"
					},
					{
						"name": "BsmtQual",
						"type": "varchar"
					},
					{
						"name": "BsmtCond",
						"type": "varchar"
					},
					{
						"name": "BsmtExposure",
						"type": "varchar"
					},
					{
						"name": "BsmtFinType1",
						"type": "varchar"
					},
					{
						"name": "BsmtFinSF1",
						"type": "int",
						"precision": 10
					},
					{
						"name": "BsmtFinType2",
						"type": "varchar"
					},
					{
						"name": "BsmtFinSF2",
						"type": "int",
						"precision": 10
					},
					{
						"name": "BsmtUnfSF",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TotalBsmtSF",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Heating",
						"type": "varchar"
					},
					{
						"name": "HeatingQC",
						"type": "varchar"
					},
					{
						"name": "CentralAir",
						"type": "varchar"
					},
					{
						"name": "Electrical",
						"type": "varchar"
					},
					{
						"name": "1stFlrSF",
						"type": "int",
						"precision": 10
					},
					{
						"name": "2ndFlrSF",
						"type": "int",
						"precision": 10
					},
					{
						"name": "LowQualFinSF",
						"type": "varchar"
					},
					{
						"name": "GrLivArea",
						"type": "int",
						"precision": 10
					},
					{
						"name": "BsmtFullBath",
						"type": "int",
						"precision": 10
					},
					{
						"name": "BsmtHalfBath",
						"type": "int",
						"precision": 10
					},
					{
						"name": "FullBath",
						"type": "int",
						"precision": 10
					},
					{
						"name": "HalfBath",
						"type": "int",
						"precision": 10
					},
					{
						"name": "BedroomAbvGr",
						"type": "int",
						"precision": 10
					},
					{
						"name": "KitchenAbvGr",
						"type": "int",
						"precision": 10
					},
					{
						"name": "KitchenQual",
						"type": "varchar"
					},
					{
						"name": "TotRmsAbvGrd",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Functional",
						"type": "varchar"
					},
					{
						"name": "Fireplaces",
						"type": "int",
						"precision": 10
					},
					{
						"name": "FireplaceQu",
						"type": "varchar"
					},
					{
						"name": "GarageType",
						"type": "varchar"
					},
					{
						"name": "GarageYrBlt",
						"type": "int",
						"precision": 10
					},
					{
						"name": "GarageFinish",
						"type": "varchar"
					},
					{
						"name": "GarageCars",
						"type": "int",
						"precision": 10
					},
					{
						"name": "GarageArea",
						"type": "int",
						"precision": 10
					},
					{
						"name": "GarageQual",
						"type": "varchar"
					},
					{
						"name": "GarageCond",
						"type": "varchar"
					},
					{
						"name": "PavedDrive",
						"type": "varchar"
					},
					{
						"name": "WoodDeckSF",
						"type": "int",
						"precision": 10
					},
					{
						"name": "OpenPorchSF",
						"type": "int",
						"precision": 10
					},
					{
						"name": "EnclosedPorch",
						"type": "int",
						"precision": 10
					},
					{
						"name": "3SsnPorch",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ScreenPorch",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PoolArea",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PoolQC",
						"type": "varchar"
					},
					{
						"name": "Fence",
						"type": "varchar"
					},
					{
						"name": "MiscFeature",
						"type": "varchar"
					},
					{
						"name": "MiscVal",
						"type": "int",
						"precision": 10
					},
					{
						"name": "MoSold",
						"type": "int",
						"precision": 10
					},
					{
						"name": "YrSold",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SaleType",
						"type": "varchar"
					},
					{
						"name": "SaleCondition",
						"type": "varchar"
					},
					{
						"name": "SalePrice",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "kaggle_train"
				}
			},
			"dependsOn": [
				"[variables('factoryId')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable4')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "UserId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Age",
						"type": "varchar"
					},
					{
						"name": "Address",
						"type": "varchar"
					},
					{
						"name": "Gender",
						"type": "varchar"
					},
					{
						"name": "UserType",
						"type": "varchar"
					},
					{
						"name": "Label",
						"type": "varchar"
					},
					{
						"name": "Total_Quantity",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Total_Value",
						"type": "int",
						"precision": 10
					},
					{
						"name": "StDev_Quantity",
						"type": "float",
						"precision": 15
					},
					{
						"name": "StDev_Value",
						"type": "float",
						"precision": 15
					},
					{
						"name": "AvgTimeDelta",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Recency",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Unique_TransactionId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Unique_ItemId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Unique_Location",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Unique_ProductCategory",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Total_Quantity_per_Unique_TransactionId",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Total_Quantity_per_Unique_ItemId",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Total_Quantity_per_Unique_Location",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Total_Quantity_per_Unique_ProductCategory",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Total_Value_per_Unique_TransactionId",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Total_Value_per_Unique_ItemId",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Total_Value_per_Unique_Location",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Total_Value_per_Unique_ProductCategory",
						"type": "float",
						"precision": 15
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "retailchurn_train_adf"
				}
			},
			"dependsOn": [
				"[variables('factoryId')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable5')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BURAK_DEMO_DB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Customer",
						"type": "varchar"
					},
					{
						"name": "GOZLEM_TARIHI",
						"type": "varchar"
					},
					{
						"name": "CHURN",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "CRMChurnData"
				}
			},
			"dependsOn": [
				"[variables('factoryId')]",
				"[concat(variables('factoryId'), '/linkedServices/BURAK_DEMO_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTabledemo')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BURAK_DEMO_DB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "UserId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Age",
						"type": "varchar"
					},
					{
						"name": "Address",
						"type": "varchar"
					},
					{
						"name": "Gender",
						"type": "varchar"
					},
					{
						"name": "UserType",
						"type": "varchar"
					},
					{
						"name": "Label",
						"type": "varchar"
					},
					{
						"name": "Total_Quantity",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Total_Value",
						"type": "int",
						"precision": 10
					},
					{
						"name": "StDev_Quantity",
						"type": "float",
						"precision": 15
					},
					{
						"name": "StDev_Value",
						"type": "float",
						"precision": 15
					},
					{
						"name": "AvgTimeDelta",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Recency",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Unique_TransactionId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Unique_ItemId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Unique_Location",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Unique_ProductCategory",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Total_Quantity_per_Unique_TransactionId",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Total_Quantity_per_Unique_ItemId",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Total_Quantity_per_Unique_Location",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Total_Quantity_per_Unique_ProductCategory",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Total_Value_per_Unique_TransactionId",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Total_Value_per_Unique_ItemId",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Total_Value_per_Unique_Location",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Total_Value_per_Unique_ProductCategory",
						"type": "float",
						"precision": 15
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "retailchurn_train"
				}
			},
			"dependsOn": [
				"[variables('factoryId')]",
				"[concat(variables('factoryId'), '/linkedServices/BURAK_DEMO_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTarget')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "day",
						"type": "int",
						"precision": 10
					},
					{
						"name": "month",
						"type": "int",
						"precision": 10
					},
					{
						"name": "year",
						"type": "int",
						"precision": 10
					},
					{
						"name": "YEARMONTHDAY",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "dates_ziylan"
				}
			},
			"dependsOn": [
				"[variables('factoryId')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSynapseAnalyticsTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSynapseAnalytics",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "colinschurnmodeltrain"
				}
			},
			"dependsOn": [
				"[variables('factoryId')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSynapseAnalytics')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSynapseAnalyticsTable2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSynapseAnalytics",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "ustunberkdemo"
				}
			},
			"dependsOn": [
				"[variables('factoryId')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSynapseAnalytics')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSynapseAnalyticsTable3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSynapseAnalytics",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "formreqlabeled"
				}
			},
			"dependsOn": [
				"[variables('factoryId')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSynapseAnalytics')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "burakblobconnection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "train.csv",
						"container": "burakblob"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Id",
						"type": "String"
					},
					{
						"name": "MSSubClass",
						"type": "String"
					},
					{
						"name": "MSZoning",
						"type": "String"
					},
					{
						"name": "LotFrontage",
						"type": "String"
					},
					{
						"name": "LotArea",
						"type": "String"
					},
					{
						"name": "Street",
						"type": "String"
					},
					{
						"name": "Alley",
						"type": "String"
					},
					{
						"name": "LotShape",
						"type": "String"
					},
					{
						"name": "LandContour",
						"type": "String"
					},
					{
						"name": "Utilities",
						"type": "String"
					},
					{
						"name": "LotConfig",
						"type": "String"
					},
					{
						"name": "LandSlope",
						"type": "String"
					},
					{
						"name": "Neighborhood",
						"type": "String"
					},
					{
						"name": "Condition1",
						"type": "String"
					},
					{
						"name": "Condition2",
						"type": "String"
					},
					{
						"name": "BldgType",
						"type": "String"
					},
					{
						"name": "HouseStyle",
						"type": "String"
					},
					{
						"name": "OverallQual",
						"type": "String"
					},
					{
						"name": "OverallCond",
						"type": "String"
					},
					{
						"name": "YearBuilt",
						"type": "String"
					},
					{
						"name": "YearRemodAdd",
						"type": "String"
					},
					{
						"name": "RoofStyle",
						"type": "String"
					},
					{
						"name": "RoofMatl",
						"type": "String"
					},
					{
						"name": "Exterior1st",
						"type": "String"
					},
					{
						"name": "Exterior2nd",
						"type": "String"
					},
					{
						"name": "MasVnrType",
						"type": "String"
					},
					{
						"name": "MasVnrArea",
						"type": "String"
					},
					{
						"name": "ExterQual",
						"type": "String"
					},
					{
						"name": "ExterCond",
						"type": "String"
					},
					{
						"name": "Foundation",
						"type": "String"
					},
					{
						"name": "BsmtQual",
						"type": "String"
					},
					{
						"name": "BsmtCond",
						"type": "String"
					},
					{
						"name": "BsmtExposure",
						"type": "String"
					},
					{
						"name": "BsmtFinType1",
						"type": "String"
					},
					{
						"name": "BsmtFinSF1",
						"type": "String"
					},
					{
						"name": "BsmtFinType2",
						"type": "String"
					},
					{
						"name": "BsmtFinSF2",
						"type": "String"
					},
					{
						"name": "BsmtUnfSF",
						"type": "String"
					},
					{
						"name": "TotalBsmtSF",
						"type": "String"
					},
					{
						"name": "Heating",
						"type": "String"
					},
					{
						"name": "HeatingQC",
						"type": "String"
					},
					{
						"name": "CentralAir",
						"type": "String"
					},
					{
						"name": "Electrical",
						"type": "String"
					},
					{
						"name": "1stFlrSF",
						"type": "String"
					},
					{
						"name": "2ndFlrSF",
						"type": "String"
					},
					{
						"name": "LowQualFinSF",
						"type": "String"
					},
					{
						"name": "GrLivArea",
						"type": "String"
					},
					{
						"name": "BsmtFullBath",
						"type": "String"
					},
					{
						"name": "BsmtHalfBath",
						"type": "String"
					},
					{
						"name": "FullBath",
						"type": "String"
					},
					{
						"name": "HalfBath",
						"type": "String"
					},
					{
						"name": "BedroomAbvGr",
						"type": "String"
					},
					{
						"name": "KitchebvGr",
						"type": "String"
					},
					{
						"name": "KitchenQual",
						"type": "String"
					},
					{
						"name": "TotRmsAbvGrd",
						"type": "String"
					},
					{
						"name": "Functiol",
						"type": "String"
					},
					{
						"name": "Fireplaces",
						"type": "String"
					},
					{
						"name": "FireplaceQu",
						"type": "String"
					},
					{
						"name": "GarageType",
						"type": "String"
					},
					{
						"name": "GarageYrBlt",
						"type": "String"
					},
					{
						"name": "GarageFinish",
						"type": "String"
					},
					{
						"name": "GarageCars",
						"type": "String"
					},
					{
						"name": "GarageArea",
						"type": "String"
					},
					{
						"name": "GarageQual",
						"type": "String"
					},
					{
						"name": "GarageCond",
						"type": "String"
					},
					{
						"name": "PavedDrive",
						"type": "String"
					},
					{
						"name": "WoodDeckSF",
						"type": "String"
					},
					{
						"name": "OpenPorchSF",
						"type": "String"
					},
					{
						"name": "EnclosedPorch",
						"type": "String"
					},
					{
						"name": "3SsnPorch",
						"type": "String"
					},
					{
						"name": "ScreenPorch",
						"type": "String"
					},
					{
						"name": "PoolArea",
						"type": "String"
					},
					{
						"name": "PoolQC",
						"type": "String"
					},
					{
						"name": "Fence",
						"type": "String"
					},
					{
						"name": "MiscFeature",
						"type": "String"
					},
					{
						"name": "MiscVal",
						"type": "String"
					},
					{
						"name": "MoSold",
						"type": "String"
					},
					{
						"name": "YrSold",
						"type": "String"
					},
					{
						"name": "SaleType",
						"type": "String"
					},
					{
						"name": "SaleCondition",
						"type": "String"
					},
					{
						"name": "SalePrice",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[variables('factoryId')]",
				"[concat(variables('factoryId'), '/linkedServices/burakblobconnection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "burakblobconnection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "train.csv",
						"container": "burakblob"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[variables('factoryId')]",
				"[concat(variables('factoryId'), '/linkedServices/burakblobconnection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "burakblobconnection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Churnmodeltrainset.csv",
						"container": "retailchurndemo"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "UserId",
						"type": "String"
					},
					{
						"name": "Age",
						"type": "String"
					},
					{
						"name": "Address",
						"type": "String"
					},
					{
						"name": "Gender",
						"type": "String"
					},
					{
						"name": "UserType",
						"type": "String"
					},
					{
						"name": "Label",
						"type": "String"
					},
					{
						"name": "Total_Quantity",
						"type": "String"
					},
					{
						"name": "Total_Value",
						"type": "String"
					},
					{
						"name": "StDev_Quantity",
						"type": "String"
					},
					{
						"name": "StDev_Value",
						"type": "String"
					},
					{
						"name": "AvgTimeDelta",
						"type": "String"
					},
					{
						"name": "Recency",
						"type": "String"
					},
					{
						"name": "Unique_TransactionId",
						"type": "String"
					},
					{
						"name": "Unique_ItemId",
						"type": "String"
					},
					{
						"name": "Unique_Location",
						"type": "String"
					},
					{
						"name": "Unique_ProductCategory",
						"type": "String"
					},
					{
						"name": "Total_Quantity_per_Unique_TransactionId",
						"type": "String"
					},
					{
						"name": "Total_Quantity_per_Unique_ItemId",
						"type": "String"
					},
					{
						"name": "Total_Quantity_per_Unique_Location",
						"type": "String"
					},
					{
						"name": "Total_Quantity_per_Unique_ProductCategory",
						"type": "String"
					},
					{
						"name": "Total_Value_per_Unique_TransactionId",
						"type": "String"
					},
					{
						"name": "Total_Value_per_Unique_ItemId",
						"type": "String"
					},
					{
						"name": "Total_Value_per_Unique_Location",
						"type": "String"
					},
					{
						"name": "Total_Value_per_Unique_ProductCategory",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[variables('factoryId')]",
				"[concat(variables('factoryId'), '/linkedServices/burakblobconnection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText4')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "burakblobconnection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "dbo.nyctaxi_sample.txt",
						"container": "dfstage"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "medallion",
						"type": "String"
					},
					{
						"name": "hack_license",
						"type": "String"
					},
					{
						"name": "vendor_id",
						"type": "String"
					},
					{
						"name": "rate_code",
						"type": "String"
					},
					{
						"name": "store_and_fwd_flag",
						"type": "String"
					},
					{
						"name": "pickup_datetime",
						"type": "String"
					},
					{
						"name": "dropoff_datetime",
						"type": "String"
					},
					{
						"name": "passenger_count",
						"type": "String"
					},
					{
						"name": "trip_time_in_secs",
						"type": "String"
					},
					{
						"name": "trip_distance",
						"type": "String"
					},
					{
						"name": "pickup_longitude",
						"type": "String"
					},
					{
						"name": "pickup_latitude",
						"type": "String"
					},
					{
						"name": "dropoff_longitude",
						"type": "String"
					},
					{
						"name": "dropoff_latitude",
						"type": "String"
					},
					{
						"name": "payment_type",
						"type": "String"
					},
					{
						"name": "fare_amount",
						"type": "String"
					},
					{
						"name": "surcharge",
						"type": "String"
					},
					{
						"name": "mta_tax",
						"type": "String"
					},
					{
						"name": "tolls_amount",
						"type": "String"
					},
					{
						"name": "total_amount",
						"type": "String"
					},
					{
						"name": "tip_amount",
						"type": "String"
					},
					{
						"name": "tipped",
						"type": "String"
					},
					{
						"name": "tip_class",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[variables('factoryId')]",
				"[concat(variables('factoryId'), '/linkedServices/burakblobconnection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_2sh')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "burakblobconnection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "ustunberk"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[variables('factoryId')]",
				"[concat(variables('factoryId'), '/linkedServices/burakblobconnection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_3fd')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "burakblobconnection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "ustunberk"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[variables('factoryId')]",
				"[concat(variables('factoryId'), '/linkedServices/burakblobconnection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_4u9')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "burakblobconnection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "nytaxisample",
						"container": "dfstage"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[variables('factoryId')]",
				"[concat(variables('factoryId'), '/linkedServices/burakblobconnection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_9m6')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSynapseAnalytics",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [],
				"typeProperties": {
					"table": "Azure Blob Storage file"
				}
			},
			"dependsOn": [
				"[variables('factoryId')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSynapseAnalytics')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_c7r')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Id",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "MSSubClass",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "MSZoning",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "LotFrontage",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "LotArea",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "Street",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Alley",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "LotShape",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "LandContour",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Utilities",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "LotConfig",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "LandSlope",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Neighborhood",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Condition1",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Condition2",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "BldgType",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "HouseStyle",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "OverallQual",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "OverallCond",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "YearBuilt",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "YearRemodAdd",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "RoofStyle",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "RoofMatl",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Exterior1st",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Exterior2nd",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "MasVnrType",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "MasVnrArea",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "ExterQual",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "ExterCond",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Foundation",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "BsmtQual",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "BsmtCond",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "BsmtExposure",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "BsmtFinType1",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "BsmtFinSF1",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "BsmtFinType2",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "BsmtFinSF2",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "BsmtUnfSF",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "TotalBsmtSF",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "Heating",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "HeatingQC",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "CentralAir",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Electrical",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "1stFlrSF",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "2ndFlrSF",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "LowQualFinSF",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "GrLivArea",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "BsmtFullBath",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "BsmtHalfBath",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "FullBath",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "HalfBath",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "BedroomAbvGr",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "KitchenAbvGr",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "KitchenQual",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TotRmsAbvGrd",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "Functional",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Fireplaces",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "FireplaceQu",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "GarageType",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "GarageYrBlt",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "GarageFinish",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "GarageCars",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "GarageArea",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "GarageQual",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "GarageCond",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "PavedDrive",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "WoodDeckSF",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "OpenPorchSF",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "EnclosedPorch",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "3SsnPorch",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "ScreenPorch",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "PoolArea",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "PoolQC",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Fence",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "MiscFeature",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "MiscVal",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "MoSold",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "YrSold",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "SaleType",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "SaleCondition",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "SalePrice",
						"type": "int",
						"precision": 10,
						"scale": 0
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "kaggle_train"
				}
			},
			"dependsOn": [
				"[variables('factoryId')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_gtr')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Id",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "MSSubClass",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "MSZoning",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "LotFrontage",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "LotArea",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "Street",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Alley",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "LotShape",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "LandContour",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Utilities",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "LotConfig",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "LandSlope",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Neighborhood",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Condition1",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Condition2",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "BldgType",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "HouseStyle",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "OverallQual",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "OverallCond",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "YearBuilt",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "YearRemodAdd",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "RoofStyle",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "RoofMatl",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Exterior1st",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Exterior2nd",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "MasVnrType",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "MasVnrArea",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "ExterQual",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "ExterCond",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Foundation",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "BsmtQual",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "BsmtCond",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "BsmtExposure",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "BsmtFinType1",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "BsmtFinSF1",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "BsmtFinType2",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "BsmtFinSF2",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "BsmtUnfSF",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "TotalBsmtSF",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "Heating",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "HeatingQC",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "CentralAir",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Electrical",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "1stFlrSF",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "2ndFlrSF",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "LowQualFinSF",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "GrLivArea",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "BsmtFullBath",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "BsmtHalfBath",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "FullBath",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "HalfBath",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "BedroomAbvGr",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "KitchenAbvGr",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "KitchenQual",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TotRmsAbvGrd",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "Functional",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Fireplaces",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "FireplaceQu",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "GarageType",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "GarageYrBlt",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "GarageFinish",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "GarageCars",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "GarageArea",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "GarageQual",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "GarageCond",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "PavedDrive",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "WoodDeckSF",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "OpenPorchSF",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "EnclosedPorch",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "3SsnPorch",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "ScreenPorch",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "PoolArea",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "PoolQC",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Fence",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "MiscFeature",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "MiscVal",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "MoSold",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "YrSold",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "SaleType",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "SaleCondition",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "SalePrice",
						"type": "int",
						"precision": 10,
						"scale": 0
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "kaggle_train"
				}
			},
			"dependsOn": [
				"[variables('factoryId')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_hhq')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Id",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "MSSubClass",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "MSZoning",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "LotFrontage",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "LotArea",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "Street",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Alley",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "LotShape",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "LandContour",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Utilities",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "LotConfig",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "LandSlope",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Neighborhood",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Condition1",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Condition2",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "BldgType",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "HouseStyle",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "OverallQual",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "OverallCond",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "YearBuilt",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "YearRemodAdd",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "RoofStyle",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "RoofMatl",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Exterior1st",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Exterior2nd",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "MasVnrType",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "MasVnrArea",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "ExterQual",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "ExterCond",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Foundation",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "BsmtQual",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "BsmtCond",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "BsmtExposure",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "BsmtFinType1",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "BsmtFinSF1",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "BsmtFinType2",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "BsmtFinSF2",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "BsmtUnfSF",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "TotalBsmtSF",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "Heating",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "HeatingQC",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "CentralAir",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Electrical",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "1stFlrSF",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "2ndFlrSF",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "LowQualFinSF",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "GrLivArea",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "BsmtFullBath",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "BsmtHalfBath",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "FullBath",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "HalfBath",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "BedroomAbvGr",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "KitchenAbvGr",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "KitchenQual",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TotRmsAbvGrd",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "Functional",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Fireplaces",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "FireplaceQu",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "GarageType",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "GarageYrBlt",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "GarageFinish",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "GarageCars",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "GarageArea",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "GarageQual",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "GarageCond",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "PavedDrive",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "WoodDeckSF",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "OpenPorchSF",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "EnclosedPorch",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "3SsnPorch",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "ScreenPorch",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "PoolArea",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "PoolQC",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Fence",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "MiscFeature",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "MiscVal",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "MoSold",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "YrSold",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "SaleType",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "SaleCondition",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "SalePrice",
						"type": "int",
						"precision": 10,
						"scale": 0
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "kaggle_train"
				}
			},
			"dependsOn": [
				"[variables('factoryId')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_i76')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "burakblobconnection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "nyctaxi_test_3",
						"container": "dfstage"
					},
					"columnDelimiter": ",",
					"compressionCodec": "gzip",
					"compressionLevel": "Fastest",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[variables('factoryId')]",
				"[concat(variables('factoryId'), '/linkedServices/burakblobconnection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_ibi')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "cluster_list",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "status_code",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "status_msg",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "status_credits",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "status_remaining_credits",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "[[dbo].[cennet_jsonnn]"
				}
			},
			"dependsOn": [
				"[variables('factoryId')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_q7y')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "fruit",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "size",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "colour",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "[[dbo].[cennet_deneme]"
				}
			},
			"dependsOn": [
				"[variables('factoryId')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_sbd')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "burakblobconnection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "dfstage"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[variables('factoryId')]",
				"[concat(variables('factoryId'), '/linkedServices/burakblobconnection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_uvi')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "burakblobconnection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "ustunberk"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[variables('factoryId')]",
				"[concat(variables('factoryId'), '/linkedServices/burakblobconnection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_wk3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "burakblobconnection",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cw_fileName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().cw_fileName",
							"type": "Expression"
						},
						"container": "adventureworks2019"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[variables('factoryId')]",
				"[concat(variables('factoryId'), '/linkedServices/burakblobconnection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_wuh')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "burakblobconnection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "dfstage"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[variables('factoryId')]",
				"[concat(variables('factoryId'), '/linkedServices/burakblobconnection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_xie')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "burakblobconnection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "burakblob"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[variables('factoryId')]",
				"[concat(variables('factoryId'), '/linkedServices/burakblobconnection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_yqa')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "OnurAir_ML",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Ucusun_Gerceklestigi_Ay",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Ucusun_Gun_Grubu",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Ucus_Vakti_Kalkis",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Ucus_Vakti_Varis",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Rota",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Kalkis_Havalimani",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Inis_Havalimani",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Departure_Country",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Arrival_Country",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Acil_Inis_Meydani",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Ucak_Kuyruk_Kodu",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Ucak_Tipi",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Yolcu_Kapasitesi",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "Ekip_Sayisi",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "Toplam_Yolcu_Sayisi",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "Ucagin_Havada_Kalma_Suresi",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "Ucagin_Havada_Kalma_Suresi_ex",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "Kus_Bakisi_Mesafe",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Ucagin_Mak_Kalkis_Agirligi",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Yakit_Tuketim_Ortalamasi",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Scored_Labels",
						"type": "float",
						"precision": 53,
						"scale": 0
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "OnurAir_ML_Scored"
				}
			},
			"dependsOn": [
				"[variables('factoryId')]",
				"[concat(variables('factoryId'), '/linkedServices/OnurAir_ML')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_zbi')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "burakblobconnection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "adventureworks2019new"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[variables('factoryId')]",
				"[concat(variables('factoryId'), '/linkedServices/burakblobconnection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_zul')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "burakblobconnection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "ustunberk"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[variables('factoryId')]",
				"[concat(variables('factoryId'), '/linkedServices/burakblobconnection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Json1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "cogsearchblob",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "118497 79828 (2).pdf.labels.json",
						"container": "formreqtrainlabeled"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"document": {
							"type": "string"
						},
						"labels": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"label": {
										"type": "string"
									},
									"key": {
										"type": "null"
									},
									"value": {
										"type": "array",
										"items": {
											"type": "object",
											"properties": {
												"page": {
													"type": "integer"
												},
												"text": {
													"type": "string"
												},
												"boundingBoxes": {
													"type": "array",
													"items": {
														"type": "array",
														"items": {
															"type": "number"
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[variables('factoryId')]",
				"[concat(variables('factoryId'), '/linkedServices/cogsearchblob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SinkDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BURAK_DEMO_DB",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SinkTableName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().SinkTableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[variables('factoryId')]",
				"[concat(variables('factoryId'), '/linkedServices/BURAK_DEMO_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DSVM_SQLSERVER",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[variables('factoryId')]",
				"[concat(variables('factoryId'), '/linkedServices/DSVM_SQLSERVER')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_2sh')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DSVM_CONNECTION",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "medallion",
						"type": "varchar"
					},
					{
						"name": "hack_license",
						"type": "varchar"
					},
					{
						"name": "vendor_id",
						"type": "char"
					},
					{
						"name": "rate_code",
						"type": "char"
					},
					{
						"name": "store_and_fwd_flag",
						"type": "char"
					},
					{
						"name": "pickup_datetime",
						"type": "datetime"
					},
					{
						"name": "dropoff_datetime",
						"type": "datetime"
					},
					{
						"name": "passenger_count",
						"type": "int"
					},
					{
						"name": "trip_time_in_secs",
						"type": "bigint"
					},
					{
						"name": "trip_distance",
						"type": "float"
					},
					{
						"name": "pickup_longitude",
						"type": "varchar"
					},
					{
						"name": "pickup_latitude",
						"type": "varchar"
					},
					{
						"name": "dropoff_longitude",
						"type": "varchar"
					},
					{
						"name": "dropoff_latitude",
						"type": "varchar"
					},
					{
						"name": "payment_type",
						"type": "char"
					},
					{
						"name": "fare_amount",
						"type": "float"
					},
					{
						"name": "surcharge",
						"type": "float"
					},
					{
						"name": "mta_tax",
						"type": "float"
					},
					{
						"name": "tolls_amount",
						"type": "float"
					},
					{
						"name": "total_amount",
						"type": "float"
					},
					{
						"name": "tip_amount",
						"type": "float"
					},
					{
						"name": "tipped",
						"type": "int"
					},
					{
						"name": "tip_class",
						"type": "int"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "nyctaxi_sample"
				}
			},
			"dependsOn": [
				"[variables('factoryId')]",
				"[concat(variables('factoryId'), '/linkedServices/DSVM_CONNECTION')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_3fd')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DSVM_CONNECTION",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "medallion",
						"type": "varchar"
					},
					{
						"name": "hack_license",
						"type": "varchar"
					},
					{
						"name": "vendor_id",
						"type": "char"
					},
					{
						"name": "rate_code",
						"type": "char"
					},
					{
						"name": "store_and_fwd_flag",
						"type": "char"
					},
					{
						"name": "pickup_datetime",
						"type": "datetime"
					},
					{
						"name": "dropoff_datetime",
						"type": "datetime"
					},
					{
						"name": "passenger_count",
						"type": "int"
					},
					{
						"name": "trip_time_in_secs",
						"type": "bigint"
					},
					{
						"name": "trip_distance",
						"type": "float"
					},
					{
						"name": "pickup_longitude",
						"type": "varchar"
					},
					{
						"name": "pickup_latitude",
						"type": "varchar"
					},
					{
						"name": "dropoff_longitude",
						"type": "varchar"
					},
					{
						"name": "dropoff_latitude",
						"type": "varchar"
					},
					{
						"name": "payment_type",
						"type": "char"
					},
					{
						"name": "fare_amount",
						"type": "float"
					},
					{
						"name": "surcharge",
						"type": "float"
					},
					{
						"name": "mta_tax",
						"type": "float"
					},
					{
						"name": "tolls_amount",
						"type": "float"
					},
					{
						"name": "total_amount",
						"type": "float"
					},
					{
						"name": "tip_amount",
						"type": "float"
					},
					{
						"name": "tipped",
						"type": "int"
					},
					{
						"name": "tip_class",
						"type": "int"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "nyctaxi_sample"
				}
			},
			"dependsOn": [
				"[variables('factoryId')]",
				"[concat(variables('factoryId'), '/linkedServices/DSVM_CONNECTION')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_4u9')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DSVM_CONNECTION",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "medallion",
						"type": "varchar"
					},
					{
						"name": "hack_license",
						"type": "varchar"
					},
					{
						"name": "vendor_id",
						"type": "char"
					},
					{
						"name": "rate_code",
						"type": "char"
					},
					{
						"name": "store_and_fwd_flag",
						"type": "char"
					},
					{
						"name": "pickup_datetime",
						"type": "datetime"
					},
					{
						"name": "dropoff_datetime",
						"type": "datetime"
					},
					{
						"name": "passenger_count",
						"type": "int"
					},
					{
						"name": "trip_time_in_secs",
						"type": "bigint"
					},
					{
						"name": "trip_distance",
						"type": "float"
					},
					{
						"name": "pickup_longitude",
						"type": "varchar"
					},
					{
						"name": "pickup_latitude",
						"type": "varchar"
					},
					{
						"name": "dropoff_longitude",
						"type": "varchar"
					},
					{
						"name": "dropoff_latitude",
						"type": "varchar"
					},
					{
						"name": "payment_type",
						"type": "char"
					},
					{
						"name": "fare_amount",
						"type": "float"
					},
					{
						"name": "surcharge",
						"type": "float"
					},
					{
						"name": "mta_tax",
						"type": "float"
					},
					{
						"name": "tolls_amount",
						"type": "float"
					},
					{
						"name": "total_amount",
						"type": "float"
					},
					{
						"name": "tip_amount",
						"type": "float"
					},
					{
						"name": "tipped",
						"type": "int"
					},
					{
						"name": "tip_class",
						"type": "int"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "nyctaxi_sample"
				}
			},
			"dependsOn": [
				"[variables('factoryId')]",
				"[concat(variables('factoryId'), '/linkedServices/DSVM_CONNECTION')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_9m6')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "cogsearchblob",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "AzureDB.xlsx",
						"container": "elementcogsearch"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "ServiceName",
						"type": "String"
					},
					{
						"name": "ServiceType",
						"type": "String"
					},
					{
						"name": "Capability",
						"type": "String"
					},
					{
						"name": "HierarchyLevelLowest",
						"type": "String"
					},
					{
						"name": "HierarchyLevel4",
						"type": "String"
					},
					{
						"name": "HierarchyLevel3",
						"type": "String"
					},
					{
						"name": "HierarchyLevel2",
						"type": "String"
					},
					{
						"name": "HierarchyLevel1",
						"type": "String"
					},
					{
						"name": "Specification",
						"type": "String"
					},
					{
						"name": "Material",
						"type": "String"
					},
					{
						"name": "LabName",
						"type": "String"
					},
					{
						"name": "Country",
						"type": "String"
					},
					{
						"name": "Continent",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[variables('factoryId')]",
				"[concat(variables('factoryId'), '/linkedServices/cogsearchblob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_c7r')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "burakblobconnection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "train.csv",
						"container": "burakblob"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Id"
					},
					{
						"name": "MSSubClass"
					},
					{
						"name": "MSZoning"
					},
					{
						"name": "LotFrontage"
					},
					{
						"name": "LotArea"
					},
					{
						"name": "Street"
					},
					{
						"name": "Alley"
					},
					{
						"name": "LotShape"
					},
					{
						"name": "LandContour"
					},
					{
						"name": "Utilities"
					},
					{
						"name": "LotConfig"
					},
					{
						"name": "LandSlope"
					},
					{
						"name": "Neighborhood"
					},
					{
						"name": "Condition1"
					},
					{
						"name": "Condition2"
					},
					{
						"name": "BldgType"
					},
					{
						"name": "HouseStyle"
					},
					{
						"name": "OverallQual"
					},
					{
						"name": "OverallCond"
					},
					{
						"name": "YearBuilt"
					},
					{
						"name": "YearRemodAdd"
					},
					{
						"name": "RoofStyle"
					},
					{
						"name": "RoofMatl"
					},
					{
						"name": "Exterior1st"
					},
					{
						"name": "Exterior2nd"
					},
					{
						"name": "MasVnrType"
					},
					{
						"name": "MasVnrArea"
					},
					{
						"name": "ExterQual"
					},
					{
						"name": "ExterCond"
					},
					{
						"name": "Foundation"
					},
					{
						"name": "BsmtQual"
					},
					{
						"name": "BsmtCond"
					},
					{
						"name": "BsmtExposure"
					},
					{
						"name": "BsmtFinType1"
					},
					{
						"name": "BsmtFinSF1"
					},
					{
						"name": "BsmtFinType2"
					},
					{
						"name": "BsmtFinSF2"
					},
					{
						"name": "BsmtUnfSF"
					},
					{
						"name": "TotalBsmtSF"
					},
					{
						"name": "Heating"
					},
					{
						"name": "HeatingQC"
					},
					{
						"name": "CentralAir"
					},
					{
						"name": "Electrical"
					},
					{
						"name": "1stFlrSF"
					},
					{
						"name": "2ndFlrSF"
					},
					{
						"name": "LowQualFinSF"
					},
					{
						"name": "GrLivArea"
					},
					{
						"name": "BsmtFullBath"
					},
					{
						"name": "BsmtHalfBath"
					},
					{
						"name": "FullBath"
					},
					{
						"name": "HalfBath"
					},
					{
						"name": "BedroomAbvGr"
					},
					{
						"name": "KitchebvGr"
					},
					{
						"name": "KitchenQual"
					},
					{
						"name": "TotRmsAbvGrd"
					},
					{
						"name": "Functiol"
					},
					{
						"name": "Fireplaces"
					},
					{
						"name": "FireplaceQu"
					},
					{
						"name": "GarageType"
					},
					{
						"name": "GarageYrBlt"
					},
					{
						"name": "GarageFinish"
					},
					{
						"name": "GarageCars"
					},
					{
						"name": "GarageArea"
					},
					{
						"name": "GarageQual"
					},
					{
						"name": "GarageCond"
					},
					{
						"name": "PavedDrive"
					},
					{
						"name": "WoodDeckSF"
					},
					{
						"name": "OpenPorchSF"
					},
					{
						"name": "EnclosedPorch"
					},
					{
						"name": "3SsnPorch"
					},
					{
						"name": "ScreenPorch"
					},
					{
						"name": "PoolArea"
					},
					{
						"name": "PoolQC"
					},
					{
						"name": "Fence"
					},
					{
						"name": "MiscFeature"
					},
					{
						"name": "MiscVal"
					},
					{
						"name": "MoSold"
					},
					{
						"name": "YrSold"
					},
					{
						"name": "SaleType"
					},
					{
						"name": "SaleCondition"
					},
					{
						"name": "SalePrice"
					}
				]
			},
			"dependsOn": [
				"[variables('factoryId')]",
				"[concat(variables('factoryId'), '/linkedServices/burakblobconnection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_gtr')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "burakblobconnection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "train.csv",
						"container": "burakblob"
					},
					"columnDelimiter": ",",
					"rowDelimiter": "\n",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Id"
					},
					{
						"name": "MSSubClass"
					},
					{
						"name": "MSZoning"
					},
					{
						"name": "LotFrontage"
					},
					{
						"name": "LotArea"
					},
					{
						"name": "Street"
					},
					{
						"name": "Alley"
					},
					{
						"name": "LotShape"
					},
					{
						"name": "LandContour"
					},
					{
						"name": "Utilities"
					},
					{
						"name": "LotConfig"
					},
					{
						"name": "LandSlope"
					},
					{
						"name": "Neighborhood"
					},
					{
						"name": "Condition1"
					},
					{
						"name": "Condition2"
					},
					{
						"name": "BldgType"
					},
					{
						"name": "HouseStyle"
					},
					{
						"name": "OverallQual"
					},
					{
						"name": "OverallCond"
					},
					{
						"name": "YearBuilt"
					},
					{
						"name": "YearRemodAdd"
					},
					{
						"name": "RoofStyle"
					},
					{
						"name": "RoofMatl"
					},
					{
						"name": "Exterior1st"
					},
					{
						"name": "Exterior2nd"
					},
					{
						"name": "MasVnrType"
					},
					{
						"name": "MasVnrArea"
					},
					{
						"name": "ExterQual"
					},
					{
						"name": "ExterCond"
					},
					{
						"name": "Foundation"
					},
					{
						"name": "BsmtQual"
					},
					{
						"name": "BsmtCond"
					},
					{
						"name": "BsmtExposure"
					},
					{
						"name": "BsmtFinType1"
					},
					{
						"name": "BsmtFinSF1"
					},
					{
						"name": "BsmtFinType2"
					},
					{
						"name": "BsmtFinSF2"
					},
					{
						"name": "BsmtUnfSF"
					},
					{
						"name": "TotalBsmtSF"
					},
					{
						"name": "Heating"
					},
					{
						"name": "HeatingQC"
					},
					{
						"name": "CentralAir"
					},
					{
						"name": "Electrical"
					},
					{
						"name": "1stFlrSF"
					},
					{
						"name": "2ndFlrSF"
					},
					{
						"name": "LowQualFinSF"
					},
					{
						"name": "GrLivArea"
					},
					{
						"name": "BsmtFullBath"
					},
					{
						"name": "BsmtHalfBath"
					},
					{
						"name": "FullBath"
					},
					{
						"name": "HalfBath"
					},
					{
						"name": "BedroomAbvGr"
					},
					{
						"name": "KitchenAbvGr"
					},
					{
						"name": "KitchenQual"
					},
					{
						"name": "TotRmsAbvGrd"
					},
					{
						"name": "Functional"
					},
					{
						"name": "Fireplaces"
					},
					{
						"name": "FireplaceQu"
					},
					{
						"name": "GarageType"
					},
					{
						"name": "GarageYrBlt"
					},
					{
						"name": "GarageFinish"
					},
					{
						"name": "GarageCars"
					},
					{
						"name": "GarageArea"
					},
					{
						"name": "GarageQual"
					},
					{
						"name": "GarageCond"
					},
					{
						"name": "PavedDrive"
					},
					{
						"name": "WoodDeckSF"
					},
					{
						"name": "OpenPorchSF"
					},
					{
						"name": "EnclosedPorch"
					},
					{
						"name": "3SsnPorch"
					},
					{
						"name": "ScreenPorch"
					},
					{
						"name": "PoolArea"
					},
					{
						"name": "PoolQC"
					},
					{
						"name": "Fence"
					},
					{
						"name": "MiscFeature"
					},
					{
						"name": "MiscVal"
					},
					{
						"name": "MoSold"
					},
					{
						"name": "YrSold"
					},
					{
						"name": "SaleType"
					},
					{
						"name": "SaleCondition"
					},
					{
						"name": "SalePrice"
					}
				]
			},
			"dependsOn": [
				"[variables('factoryId')]",
				"[concat(variables('factoryId'), '/linkedServices/burakblobconnection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_hhq')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "burakblobconnection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "train.csv",
						"container": "burakblob"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Id"
					},
					{
						"name": "MSSubClass"
					},
					{
						"name": "MSZoning"
					},
					{
						"name": "LotFrontage"
					},
					{
						"name": "LotArea"
					},
					{
						"name": "Street"
					},
					{
						"name": "Alley"
					},
					{
						"name": "LotShape"
					},
					{
						"name": "LandContour"
					},
					{
						"name": "Utilities"
					},
					{
						"name": "LotConfig"
					},
					{
						"name": "LandSlope"
					},
					{
						"name": "Neighborhood"
					},
					{
						"name": "Condition1"
					},
					{
						"name": "Condition2"
					},
					{
						"name": "BldgType"
					},
					{
						"name": "HouseStyle"
					},
					{
						"name": "OverallQual"
					},
					{
						"name": "OverallCond"
					},
					{
						"name": "YearBuilt"
					},
					{
						"name": "YearRemodAdd"
					},
					{
						"name": "RoofStyle"
					},
					{
						"name": "RoofMatl"
					},
					{
						"name": "Exterior1st"
					},
					{
						"name": "Exterior2nd"
					},
					{
						"name": "MasVnrType"
					},
					{
						"name": "MasVnrArea"
					},
					{
						"name": "ExterQual"
					},
					{
						"name": "ExterCond"
					},
					{
						"name": "Foundation"
					},
					{
						"name": "BsmtQual"
					},
					{
						"name": "BsmtCond"
					},
					{
						"name": "BsmtExposure"
					},
					{
						"name": "BsmtFinType1"
					},
					{
						"name": "BsmtFinSF1"
					},
					{
						"name": "BsmtFinType2"
					},
					{
						"name": "BsmtFinSF2"
					},
					{
						"name": "BsmtUnfSF"
					},
					{
						"name": "TotalBsmtSF"
					},
					{
						"name": "Heating"
					},
					{
						"name": "HeatingQC"
					},
					{
						"name": "CentralAir"
					},
					{
						"name": "Electrical"
					},
					{
						"name": "1stFlrSF"
					},
					{
						"name": "2ndFlrSF"
					},
					{
						"name": "LowQualFinSF"
					},
					{
						"name": "GrLivArea"
					},
					{
						"name": "BsmtFullBath"
					},
					{
						"name": "BsmtHalfBath"
					},
					{
						"name": "FullBath"
					},
					{
						"name": "HalfBath"
					},
					{
						"name": "BedroomAbvGr"
					},
					{
						"name": "KitchebvGr"
					},
					{
						"name": "KitchenQual"
					},
					{
						"name": "TotRmsAbvGrd"
					},
					{
						"name": "Functiol"
					},
					{
						"name": "Fireplaces"
					},
					{
						"name": "FireplaceQu"
					},
					{
						"name": "GarageType"
					},
					{
						"name": "GarageYrBlt"
					},
					{
						"name": "GarageFinish"
					},
					{
						"name": "GarageCars"
					},
					{
						"name": "GarageArea"
					},
					{
						"name": "GarageQual"
					},
					{
						"name": "GarageCond"
					},
					{
						"name": "PavedDrive"
					},
					{
						"name": "WoodDeckSF"
					},
					{
						"name": "OpenPorchSF"
					},
					{
						"name": "EnclosedPorch"
					},
					{
						"name": "3SsnPorch"
					},
					{
						"name": "ScreenPorch"
					},
					{
						"name": "PoolArea"
					},
					{
						"name": "PoolQC"
					},
					{
						"name": "Fence"
					},
					{
						"name": "MiscFeature"
					},
					{
						"name": "MiscVal"
					},
					{
						"name": "MoSold"
					},
					{
						"name": "YrSold"
					},
					{
						"name": "SaleType"
					},
					{
						"name": "SaleCondition"
					},
					{
						"name": "SalePrice"
					}
				]
			},
			"dependsOn": [
				"[variables('factoryId')]",
				"[concat(variables('factoryId'), '/linkedServices/burakblobconnection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_i76')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DSVM_CONNECTION",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "medallion",
						"type": "varchar"
					},
					{
						"name": "hack_license",
						"type": "varchar"
					},
					{
						"name": "vendor_id",
						"type": "char"
					},
					{
						"name": "rate_code",
						"type": "char"
					},
					{
						"name": "store_and_fwd_flag",
						"type": "char"
					},
					{
						"name": "pickup_datetime",
						"type": "datetime"
					},
					{
						"name": "dropoff_datetime",
						"type": "datetime"
					},
					{
						"name": "passenger_count",
						"type": "int"
					},
					{
						"name": "trip_time_in_secs",
						"type": "bigint"
					},
					{
						"name": "trip_distance",
						"type": "float"
					},
					{
						"name": "pickup_longitude",
						"type": "varchar"
					},
					{
						"name": "pickup_latitude",
						"type": "varchar"
					},
					{
						"name": "dropoff_longitude",
						"type": "varchar"
					},
					{
						"name": "dropoff_latitude",
						"type": "varchar"
					},
					{
						"name": "payment_type",
						"type": "char"
					},
					{
						"name": "fare_amount",
						"type": "float"
					},
					{
						"name": "surcharge",
						"type": "float"
					},
					{
						"name": "mta_tax",
						"type": "float"
					},
					{
						"name": "tolls_amount",
						"type": "float"
					},
					{
						"name": "total_amount",
						"type": "float"
					},
					{
						"name": "tip_amount",
						"type": "float"
					},
					{
						"name": "tipped",
						"type": "int"
					},
					{
						"name": "tip_class",
						"type": "int"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "nyctaxi_sample"
				}
			},
			"dependsOn": [
				"[variables('factoryId')]",
				"[concat(variables('factoryId'), '/linkedServices/DSVM_CONNECTION')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_ibi')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage14",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureBlob",
				"structure": [
					{
						"name": "cluster_list",
						"type": "String"
					},
					{
						"name": "status.code",
						"type": "String"
					},
					{
						"name": "status.msg",
						"type": "String"
					},
					{
						"name": "status.credits",
						"type": "String"
					},
					{
						"name": "status.remaining_credits",
						"type": "String"
					}
				],
				"typeProperties": {
					"format": {
						"type": "JsonFormat",
						"filePattern": "setOfObjects",
						"jsonPathDefinition": {
							"cluster_list": "$.['cluster_list']",
							"status.code": "$.['status']['code']",
							"status.msg": "$.['status']['msg']",
							"status.credits": "$.['status']['credits']",
							"status.remaining_credits": "$.['status']['remaining_credits']"
						}
					},
					"fileName": "[parameters('SourceDataset_ibi_properties_typeProperties_fileName')]",
					"folderPath": "[parameters('SourceDataset_ibi_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": [
				"[variables('factoryId')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage14')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_q7y')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage14",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureBlob",
				"structure": [
					{
						"name": "fruit",
						"type": "String"
					},
					{
						"name": "size",
						"type": "String"
					},
					{
						"name": "color",
						"type": "String"
					}
				],
				"typeProperties": {
					"format": {
						"type": "JsonFormat",
						"filePattern": "setOfObjects",
						"jsonPathDefinition": {
							"fruit": "$.['fruit']",
							"size": "$.['size']",
							"color": "$.['color']"
						}
					},
					"fileName": "[parameters('SourceDataset_q7y_properties_typeProperties_fileName')]",
					"folderPath": "[parameters('SourceDataset_q7y_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": [
				"[variables('factoryId')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage14')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_sbd')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DSVM_CONNECTION",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "medallion",
						"type": "varchar"
					},
					{
						"name": "hack_license",
						"type": "varchar"
					},
					{
						"name": "vendor_id",
						"type": "char"
					},
					{
						"name": "rate_code",
						"type": "char"
					},
					{
						"name": "store_and_fwd_flag",
						"type": "char"
					},
					{
						"name": "pickup_datetime",
						"type": "datetime"
					},
					{
						"name": "dropoff_datetime",
						"type": "datetime"
					},
					{
						"name": "passenger_count",
						"type": "int"
					},
					{
						"name": "trip_time_in_secs",
						"type": "bigint"
					},
					{
						"name": "trip_distance",
						"type": "float"
					},
					{
						"name": "pickup_longitude",
						"type": "varchar"
					},
					{
						"name": "pickup_latitude",
						"type": "varchar"
					},
					{
						"name": "dropoff_longitude",
						"type": "varchar"
					},
					{
						"name": "dropoff_latitude",
						"type": "varchar"
					},
					{
						"name": "payment_type",
						"type": "char"
					},
					{
						"name": "fare_amount",
						"type": "float"
					},
					{
						"name": "surcharge",
						"type": "float"
					},
					{
						"name": "mta_tax",
						"type": "float"
					},
					{
						"name": "tolls_amount",
						"type": "float"
					},
					{
						"name": "total_amount",
						"type": "float"
					},
					{
						"name": "tip_amount",
						"type": "float"
					},
					{
						"name": "tipped",
						"type": "int"
					},
					{
						"name": "tip_class",
						"type": "int"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "nyctaxi_sample"
				}
			},
			"dependsOn": [
				"[variables('factoryId')]",
				"[concat(variables('factoryId'), '/linkedServices/DSVM_CONNECTION')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_uvi')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DSVM_CONNECTION",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "medallion",
						"type": "varchar"
					},
					{
						"name": "hack_license",
						"type": "varchar"
					},
					{
						"name": "vendor_id",
						"type": "char"
					},
					{
						"name": "rate_code",
						"type": "char"
					},
					{
						"name": "store_and_fwd_flag",
						"type": "char"
					},
					{
						"name": "pickup_datetime",
						"type": "datetime"
					},
					{
						"name": "dropoff_datetime",
						"type": "datetime"
					},
					{
						"name": "passenger_count",
						"type": "int"
					},
					{
						"name": "trip_time_in_secs",
						"type": "bigint"
					},
					{
						"name": "trip_distance",
						"type": "float"
					},
					{
						"name": "pickup_longitude",
						"type": "varchar"
					},
					{
						"name": "pickup_latitude",
						"type": "varchar"
					},
					{
						"name": "dropoff_longitude",
						"type": "varchar"
					},
					{
						"name": "dropoff_latitude",
						"type": "varchar"
					},
					{
						"name": "payment_type",
						"type": "char"
					},
					{
						"name": "fare_amount",
						"type": "float"
					},
					{
						"name": "surcharge",
						"type": "float"
					},
					{
						"name": "mta_tax",
						"type": "float"
					},
					{
						"name": "tolls_amount",
						"type": "float"
					},
					{
						"name": "total_amount",
						"type": "float"
					},
					{
						"name": "tip_amount",
						"type": "float"
					},
					{
						"name": "tipped",
						"type": "int"
					},
					{
						"name": "tip_class",
						"type": "int"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "nyctaxi_sample"
				}
			},
			"dependsOn": [
				"[variables('factoryId')]",
				"[concat(variables('factoryId'), '/linkedServices/DSVM_CONNECTION')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_wk3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DSVM_SQLSERVER",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cw_schema": {
						"type": "String"
					},
					"cw_table": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().cw_schema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().cw_table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[variables('factoryId')]",
				"[concat(variables('factoryId'), '/linkedServices/DSVM_SQLSERVER')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_wuh')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DSVM_CONNECTION",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "medallion",
						"type": "varchar"
					},
					{
						"name": "hack_license",
						"type": "varchar"
					},
					{
						"name": "vendor_id",
						"type": "char"
					},
					{
						"name": "rate_code",
						"type": "char"
					},
					{
						"name": "store_and_fwd_flag",
						"type": "char"
					},
					{
						"name": "pickup_datetime",
						"type": "datetime"
					},
					{
						"name": "dropoff_datetime",
						"type": "datetime"
					},
					{
						"name": "passenger_count",
						"type": "int"
					},
					{
						"name": "trip_time_in_secs",
						"type": "bigint"
					},
					{
						"name": "trip_distance",
						"type": "float"
					},
					{
						"name": "pickup_longitude",
						"type": "varchar"
					},
					{
						"name": "pickup_latitude",
						"type": "varchar"
					},
					{
						"name": "dropoff_longitude",
						"type": "varchar"
					},
					{
						"name": "dropoff_latitude",
						"type": "varchar"
					},
					{
						"name": "payment_type",
						"type": "char"
					},
					{
						"name": "fare_amount",
						"type": "float"
					},
					{
						"name": "surcharge",
						"type": "float"
					},
					{
						"name": "mta_tax",
						"type": "float"
					},
					{
						"name": "tolls_amount",
						"type": "float"
					},
					{
						"name": "total_amount",
						"type": "float"
					},
					{
						"name": "tip_amount",
						"type": "float"
					},
					{
						"name": "tipped",
						"type": "int"
					},
					{
						"name": "tip_class",
						"type": "int"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "nyctaxi_sample"
				}
			},
			"dependsOn": [
				"[variables('factoryId')]",
				"[concat(variables('factoryId'), '/linkedServices/DSVM_CONNECTION')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_xie')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "burakblobconnection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "CRMChurnData.csv",
						"container": "burakblob"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Customer",
						"type": "String"
					},
					{
						"name": "GOZLEM_TARIHI",
						"type": "String"
					},
					{
						"name": "CHURN",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[variables('factoryId')]",
				"[concat(variables('factoryId'), '/linkedServices/burakblobconnection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_yqa')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "onurairml_scoreddata",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "data.dataset.parquet",
						"folderPath": "azureml/83761bd2-ed25-4b3d-b5d1-bff000398d85/Scored_dataset",
						"container": "azureml-blobstore-d485de1e-bee0-44a1-8091-7417e6f5959c"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[variables('factoryId')]",
				"[concat(variables('factoryId'), '/linkedServices/onurairml_scoreddata')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_zbi')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DSVM_SQLSERVER",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "PersonID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Name",
						"type": "varchar"
					},
					{
						"name": "LastModifytime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "customer_table"
				}
			},
			"dependsOn": [
				"[variables('factoryId')]",
				"[concat(variables('factoryId'), '/linkedServices/DSVM_SQLSERVER')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_zul')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DSVM_CONNECTION",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "medallion",
						"type": "varchar"
					},
					{
						"name": "hack_license",
						"type": "varchar"
					},
					{
						"name": "vendor_id",
						"type": "char"
					},
					{
						"name": "rate_code",
						"type": "char"
					},
					{
						"name": "store_and_fwd_flag",
						"type": "char"
					},
					{
						"name": "pickup_datetime",
						"type": "datetime"
					},
					{
						"name": "dropoff_datetime",
						"type": "datetime"
					},
					{
						"name": "passenger_count",
						"type": "int"
					},
					{
						"name": "trip_time_in_secs",
						"type": "bigint"
					},
					{
						"name": "trip_distance",
						"type": "float"
					},
					{
						"name": "pickup_longitude",
						"type": "varchar"
					},
					{
						"name": "pickup_latitude",
						"type": "varchar"
					},
					{
						"name": "dropoff_longitude",
						"type": "varchar"
					},
					{
						"name": "dropoff_latitude",
						"type": "varchar"
					},
					{
						"name": "payment_type",
						"type": "char"
					},
					{
						"name": "fare_amount",
						"type": "float"
					},
					{
						"name": "surcharge",
						"type": "float"
					},
					{
						"name": "mta_tax",
						"type": "float"
					},
					{
						"name": "tolls_amount",
						"type": "float"
					},
					{
						"name": "total_amount",
						"type": "float"
					},
					{
						"name": "tip_amount",
						"type": "float"
					},
					{
						"name": "tipped",
						"type": "int"
					},
					{
						"name": "tip_class",
						"type": "int"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "nyctaxi_sample"
				}
			},
			"dependsOn": [
				"[variables('factoryId')]",
				"[concat(variables('factoryId'), '/linkedServices/DSVM_CONNECTION')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/WatermarkDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BURAK_DEMO_DB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "watermarktable"
				}
			},
			"dependsOn": [
				"[variables('factoryId')]",
				"[concat(variables('factoryId'), '/linkedServices/BURAK_DEMO_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/retailchurndata')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BURAK_DEMO_DB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "UserId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Age",
						"type": "varchar"
					},
					{
						"name": "Address",
						"type": "varchar"
					},
					{
						"name": "Gender",
						"type": "varchar"
					},
					{
						"name": "UserType",
						"type": "varchar"
					},
					{
						"name": "Total_Quantity",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Total_Value",
						"type": "int",
						"precision": 10
					},
					{
						"name": "StDev_Quantity",
						"type": "float",
						"precision": 15
					},
					{
						"name": "StDev_Value",
						"type": "float",
						"precision": 15
					},
					{
						"name": "AvgTimeDelta",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Recency",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Unique_TransactionId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Unique_ItemId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Unique_Location",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Unique_ProductCategory",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Total_Quantity_per_Unique_TransactionId",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Total_Quantity_per_Unique_ItemId",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Total_Quantity_per_Unique_Location",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Total_Quantity_per_Unique_ProductCategory",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Total_Value_per_Unique_TransactionId",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Total_Value_per_Unique_ItemId",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Total_Value_per_Unique_Location",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Total_Value_per_Unique_ProductCategory",
						"type": "float",
						"precision": 15
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "retailchurn_test"
				}
			},
			"dependsOn": [
				"[variables('factoryId')]",
				"[concat(variables('factoryId'), '/linkedServices/BURAK_DEMO_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]"
				}
			},
			"dependsOn": [
				"[variables('factoryId')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage10')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage10_connectionString')]"
				}
			},
			"dependsOn": [
				"[variables('factoryId')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage11')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage11_connectionString')]"
				}
			},
			"dependsOn": [
				"[variables('factoryId')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage12')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage12_connectionString')]"
				}
			},
			"dependsOn": [
				"[variables('factoryId')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage13')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage13_connectionString')]"
				}
			},
			"dependsOn": [
				"[variables('factoryId')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage14')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage14_connectionString')]"
				}
			},
			"dependsOn": [
				"[variables('factoryId')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage2_connectionString')]"
				}
			},
			"dependsOn": [
				"[variables('factoryId')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage3')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage3_connectionString')]"
				}
			},
			"dependsOn": [
				"[variables('factoryId')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage4')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage4_connectionString')]"
				}
			},
			"dependsOn": [
				"[variables('factoryId')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage5')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage5_connectionString')]"
				}
			},
			"dependsOn": [
				"[variables('factoryId')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage6')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage6_connectionString')]"
				}
			},
			"dependsOn": [
				"[variables('factoryId')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage7')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage7_connectionString')]"
				}
			},
			"dependsOn": [
				"[variables('factoryId')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage8')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage8_connectionString')]"
				}
			},
			"dependsOn": [
				"[variables('factoryId')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage9')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage9_connectionString')]"
				}
			},
			"dependsOn": [
				"[variables('factoryId')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricks')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-4467513492670883.3.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('AzureDatabricks_accessToken')]"
					},
					"existingClusterId": "0825-065139-opt873"
				}
			},
			"dependsOn": [
				"[variables('factoryId')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureML1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureML",
				"typeProperties": {
					"mlEndpoint": "https://europewest.services.azureml.net/workspaces/54c71b32edfb4eb9910767ae37629ffd/services/2c7a979e38384cb583b650b9d0bcd5e0/jobs?api-version=2.0",
					"apiKey": {
						"type": "SecureString",
						"value": "[parameters('AzureML1_apiKey')]"
					}
				}
			},
			"dependsOn": [
				"[variables('factoryId')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureML2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureML",
				"typeProperties": {
					"mlEndpoint": "https://europewest.services.azureml.net/subscriptions/b87e2be74cc547958350017440510a83/services/f3d166ff3f334436a996cabb949172be/jobs?api-version=2.0",
					"apiKey": {
						"type": "SecureString",
						"value": "[parameters('AzureML2_apiKey')]"
					}
				}
			},
			"dependsOn": [
				"[variables('factoryId')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureMLService1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureMLService",
				"typeProperties": {
					"subscriptionId": "[parameters('AzureMLService1_properties_typeProperties_subscriptionId')]",
					"resourceGroupName": "[parameters('AzureMLService1_properties_typeProperties_resourceGroupName')]",
					"mlWorkspaceName": "burakozuermls",
					"servicePrincipalId": "[parameters('AzureMLService1_properties_typeProperties_servicePrincipalId')]",
					"servicePrincipalKey": {
						"type": "SecureString",
						"value": "[parameters('AzureMLService1_servicePrincipalKey')]"
					},
					"tenant": "[parameters('AzureMLService1_properties_typeProperties_tenant')]"
				}
			},
			"dependsOn": [
				"[variables('factoryId')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureML_OnurAirFlightTimePrediction')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Onur Air Flight Time Prediction Model Scoring API",
				"annotations": [],
				"type": "AzureML",
				"typeProperties": {
					"mlEndpoint": "https://ussouthcentral.services.azureml.net/workspaces/a9eba14534554ca29be2153947e54739/services/73e2b78fa8874da1acb6f3e4051efb80/jobs?api-version=2.0",
					"apiKey": {
						"type": "SecureString",
						"value": "[parameters('AzureML_OnurAirFlightTimePrediction_apiKey')]"
					}
				}
			},
			"dependsOn": [
				"[variables('factoryId')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase_connectionString')]"
				}
			},
			"dependsOn": [
				"[variables('factoryId')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase1_connectionString')]"
				}
			},
			"dependsOn": [
				"[variables('factoryId')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase2_connectionString')]"
				}
			},
			"dependsOn": [
				"[variables('factoryId')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase3')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase3_connectionString')]"
				}
			},
			"dependsOn": [
				"[variables('factoryId')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSynapseAnalytics')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('AzureSynapseAnalytics_connectionString')]"
				}
			},
			"dependsOn": [
				"[variables('factoryId')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BURAK_DEMO_DB')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('BURAK_DEMO_DB_connectionString')]"
				}
			},
			"dependsOn": [
				"[variables('factoryId')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DSVM_CONNECTION')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('DSVM_CONNECTION_connectionString')]",
					"userName": "[parameters('DSVM_CONNECTION_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('DSVM_CONNECTION_password')]"
					}
				},
				"connectVia": {
					"referenceName": "BURAKMLDSVM",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[variables('factoryId')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/BURAKMLDSVM')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DSVM_SQLSERVER')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('DSVM_SQLSERVER_connectionString')]",
					"userName": "[parameters('DSVM_SQLSERVER_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('DSVM_SQLSERVER_password')]"
					}
				},
				"connectVia": {
					"referenceName": "dsvmselfhosted",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[variables('factoryId')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/dsvmselfhosted')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OnurAirBlob')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('OnurAirBlob_connectionString')]"
				}
			},
			"dependsOn": [
				"[variables('factoryId')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OnurAir_ML')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('OnurAir_ML_connectionString')]"
				}
			},
			"dependsOn": [
				"[variables('factoryId')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/burakblobconnection')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('burakblobconnection_connectionString')]"
				}
			},
			"dependsOn": [
				"[variables('factoryId')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/cogsearchblob')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('cogsearchblob_connectionString')]"
				}
			},
			"dependsOn": [
				"[variables('factoryId')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/linkedService1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('linkedService1_connectionString')]"
				}
			},
			"dependsOn": [
				"[variables('factoryId')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/onurairml_scoreddata')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('onurairml_scoreddata_connectionString')]"
				}
			},
			"dependsOn": [
				"[variables('factoryId')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/eventbasetrigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [
					"retailchurndemo"
				],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Retailchurnpipeline",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/eventtriggerdemo/blobs/",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('eventbasetrigger_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[variables('factoryId')]",
				"[concat(variables('factoryId'), '/pipelines/Retailchurnpipeline')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger1')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [
					"retailchurndemo"
				],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Retailchurnpipeline",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/eventtriggerdemo/blobs/",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('trigger1_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated",
						"Microsoft.Storage.BlobDeleted"
					]
				}
			},
			"dependsOn": [
				"[variables('factoryId')]",
				"[concat(variables('factoryId'), '/pipelines/Retailchurnpipeline')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BURAKMLDSVM')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": [
				"[variables('factoryId')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dsvmselfhosted')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": [
				"[variables('factoryId')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/integruntimeml')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				}
			},
			"dependsOn": [
				"[variables('factoryId')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_DEMO_NYCTX')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DelimitedText4",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsTable2",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "Select1"
						},
						{
							"name": "SurrogateKey1"
						},
						{
							"name": "DerivedColumn1"
						}
					],
					"script": "source(output(\n\t\tmedallion as string,\n\t\thack_license as string,\n\t\tvendor_id as string,\n\t\trate_code as string,\n\t\tstore_and_fwd_flag as string,\n\t\tpickup_datetime as string,\n\t\tdropoff_datetime as string,\n\t\tpassenger_count as string,\n\t\ttrip_time_in_secs as string,\n\t\ttrip_distance as string,\n\t\tpickup_longitude as string,\n\t\tpickup_latitude as string,\n\t\tdropoff_longitude as string,\n\t\tdropoff_latitude as string,\n\t\tpayment_type as string,\n\t\tfare_amount as string,\n\t\tsurcharge as string,\n\t\tmta_tax as string,\n\t\ttolls_amount as string,\n\t\ttotal_amount as string,\n\t\ttip_amount as string,\n\t\ttipped as string,\n\t\ttip_class as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tlimit: 100) ~> source1\nSurrogateKey1 select(mapColumn(\n\t\tmedallion,\n\t\thack_license,\n\t\tvendor_id,\n\t\trate_code,\n\t\tstore_and_fwd_flag,\n\t\tpickup_datetime,\n\t\tdropoff_datetime,\n\t\tpassenger_count,\n\t\ttrip_time_in_secs,\n\t\ttrip_distance,\n\t\tpickup_longitude,\n\t\tpickup_latitude,\n\t\tdropoff_longitude,\n\t\tdropoff_latitude,\n\t\tpayment_type,\n\t\tfare_amount,\n\t\tsurcharge,\n\t\tmta_tax,\n\t\ttolls_amount,\n\t\ttotal_amount,\n\t\ttip_amount,\n\t\ttipped\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nsource1 keyGenerate(output(Surrogatekey as long),\n\tstartAt: 1L) ~> SurrogateKey1\nSelect1 derive(weekoftheyear = weekOfYear(toTimestamp(pickup_datetime))) ~> DerivedColumn1\nDerivedColumn1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tstaged: true,\n\tmapColumn(\n\t\tmedallion,\n\t\thack_license,\n\t\tvendor_id,\n\t\trate_code,\n\t\tstore_and_fwd_flag,\n\t\tpickup_datetime,\n\t\tdropoff_datetime,\n\t\tpassenger_count,\n\t\ttrip_time_in_secs,\n\t\ttrip_distance,\n\t\tpickup_longitude,\n\t\tpickup_latitude,\n\t\tdropoff_longitude,\n\t\tdropoff_latitude,\n\t\tpayment_type,\n\t\tfare_amount,\n\t\tsurcharge,\n\t\tmta_tax,\n\t\ttolls_amount,\n\t\ttotal_amount,\n\t\ttip_amount,\n\t\ttipped,\n\t\tweekoftheyear\n\t),\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
				}
			},
			"dependsOn": [
				"[variables('factoryId')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText4')]",
				"[concat(variables('factoryId'), '/datasets/AzureSynapseAnalyticsTable2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "AzureSqlSource",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSqlTarget",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\tDAY as integer,\n\t\tMONTH as integer,\n\t\tYEAR as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> source1\nsource1 sink(input(\n\t\tday as integer,\n\t\tmonth as integer,\n\t\tyear as integer,\n\t\tYEARMONTHDAY as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tday = DAY,\n\t\tmonth = MONTH,\n\t\tyear = YEAR\n\t),\n\terrorHandlingOption: 'stopOnFirstError') ~> sink1"
				}
			},
			"dependsOn": [
				"[variables('factoryId')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlSource')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTarget')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow3')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DelimitedText1",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSqlTable3",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\tId as string,\n\t\tMSSubClass as string,\n\t\tMSZoning as string,\n\t\tLotFrontage as string,\n\t\tLotArea as string,\n\t\tStreet as string,\n\t\tAlley as string,\n\t\tLotShape as string,\n\t\tLandContour as string,\n\t\tUtilities as string,\n\t\tLotConfig as string,\n\t\tLandSlope as string,\n\t\tNeighborhood as string,\n\t\tCondition1 as string,\n\t\tCondition2 as string,\n\t\tBldgType as string,\n\t\tHouseStyle as string,\n\t\tOverallQual as string,\n\t\tOverallCond as string,\n\t\tYearBuilt as string,\n\t\tYearRemodAdd as string,\n\t\tRoofStyle as string,\n\t\tRoofMatl as string,\n\t\tExterior1st as string,\n\t\tExterior2nd as string,\n\t\tMasVnrType as string,\n\t\tMasVnrArea as string,\n\t\tExterQual as string,\n\t\tExterCond as string,\n\t\tFoundation as string,\n\t\tBsmtQual as string,\n\t\tBsmtCond as string,\n\t\tBsmtExposure as string,\n\t\tBsmtFinType1 as string,\n\t\tBsmtFinSF1 as string,\n\t\tBsmtFinType2 as string,\n\t\tBsmtFinSF2 as string,\n\t\tBsmtUnfSF as string,\n\t\tTotalBsmtSF as string,\n\t\tHeating as string,\n\t\tHeatingQC as string,\n\t\tCentralAir as string,\n\t\tElectrical as string,\n\t\t{1stFlrSF} as string,\n\t\t{2ndFlrSF} as string,\n\t\tLowQualFinSF as string,\n\t\tGrLivArea as string,\n\t\tBsmtFullBath as string,\n\t\tBsmtHalfBath as string,\n\t\tFullBath as string,\n\t\tHalfBath as string,\n\t\tBedroomAbvGr as string,\n\t\tKitchebvGr as string,\n\t\tKitchenQual as string,\n\t\tTotRmsAbvGrd as string,\n\t\tFunctiol as string,\n\t\tFireplaces as string,\n\t\tFireplaceQu as string,\n\t\tGarageType as string,\n\t\tGarageYrBlt as string,\n\t\tGarageFinish as string,\n\t\tGarageCars as string,\n\t\tGarageArea as string,\n\t\tGarageQual as string,\n\t\tGarageCond as string,\n\t\tPavedDrive as string,\n\t\tWoodDeckSF as string,\n\t\tOpenPorchSF as string,\n\t\tEnclosedPorch as string,\n\t\t{3SsnPorch} as string,\n\t\tScreenPorch as string,\n\t\tPoolArea as string,\n\t\tPoolQC as string,\n\t\tFence as string,\n\t\tMiscFeature as string,\n\t\tMiscVal as string,\n\t\tMoSold as string,\n\t\tYrSold as string,\n\t\tSaleType as string,\n\t\tSaleCondition as string,\n\t\tSalePrice as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tlimit: 100) ~> source1\nsource1 sink(input(\n\t\tId as integer,\n\t\tMSSubClass as integer,\n\t\tMSZoning as string,\n\t\tLotFrontage as integer,\n\t\tLotArea as integer,\n\t\tStreet as string,\n\t\tAlley as string,\n\t\tLotShape as string,\n\t\tLandContour as string,\n\t\tUtilities as string,\n\t\tLotConfig as string,\n\t\tLandSlope as string,\n\t\tNeighborhood as string,\n\t\tCondition1 as string,\n\t\tCondition2 as string,\n\t\tBldgType as string,\n\t\tHouseStyle as string,\n\t\tOverallQual as integer,\n\t\tOverallCond as integer,\n\t\tYearBuilt as integer,\n\t\tYearRemodAdd as string,\n\t\tRoofStyle as string,\n\t\tRoofMatl as string,\n\t\tExterior1st as string,\n\t\tExterior2nd as string,\n\t\tMasVnrType as string,\n\t\tMasVnrArea as integer,\n\t\tExterQual as string,\n\t\tExterCond as string,\n\t\tFoundation as string,\n\t\tBsmtQual as string,\n\t\tBsmtCond as string,\n\t\tBsmtExposure as string,\n\t\tBsmtFinType1 as string,\n\t\tBsmtFinSF1 as integer,\n\t\tBsmtFinType2 as string,\n\t\tBsmtFinSF2 as integer,\n\t\tBsmtUnfSF as integer,\n\t\tTotalBsmtSF as integer,\n\t\tHeating as string,\n\t\tHeatingQC as string,\n\t\tCentralAir as string,\n\t\tElectrical as string,\n\t\t{1stFlrSF} as integer,\n\t\t{2ndFlrSF} as integer,\n\t\tLowQualFinSF as string,\n\t\tGrLivArea as integer,\n\t\tBsmtFullBath as integer,\n\t\tBsmtHalfBath as integer,\n\t\tFullBath as integer,\n\t\tHalfBath as integer,\n\t\tBedroomAbvGr as integer,\n\t\tKitchenAbvGr as integer,\n\t\tKitchenQual as string,\n\t\tTotRmsAbvGrd as integer,\n\t\tFunctional as string,\n\t\tFireplaces as integer,\n\t\tFireplaceQu as string,\n\t\tGarageType as string,\n\t\tGarageYrBlt as integer,\n\t\tGarageFinish as string,\n\t\tGarageCars as integer,\n\t\tGarageArea as integer,\n\t\tGarageQual as string,\n\t\tGarageCond as string,\n\t\tPavedDrive as string,\n\t\tWoodDeckSF as integer,\n\t\tOpenPorchSF as integer,\n\t\tEnclosedPorch as integer,\n\t\t{3SsnPorch} as integer,\n\t\tScreenPorch as integer,\n\t\tPoolArea as integer,\n\t\tPoolQC as string,\n\t\tFence as string,\n\t\tMiscFeature as string,\n\t\tMiscVal as integer,\n\t\tMoSold as integer,\n\t\tYrSold as integer,\n\t\tSaleType as string,\n\t\tSaleCondition as string,\n\t\tSalePrice as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sink1"
				}
			},
			"dependsOn": [
				"[variables('factoryId')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText1')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow4')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Json1",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsTable3",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\tdocument as string,\n\t\tlabels as (label as string, key as string, value as (page as string, text as string, boundingBoxes as double[][])[])[]\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tdocumentForm: 'documentPerLine') ~> source1\nsource1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tstaged: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
				}
			},
			"dependsOn": [
				"[variables('factoryId')]",
				"[concat(variables('factoryId'), '/datasets/Json1')]",
				"[concat(variables('factoryId'), '/datasets/AzureSynapseAnalyticsTable3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/retailchurndemo')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DelimitedText3",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSqlTable4",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "DerivedColumn1"
						}
					],
					"script": "source(output(\n\t\tUserId as string,\n\t\tAge as string,\n\t\tAddress as string,\n\t\tGender as string,\n\t\tUserType as string,\n\t\tLabel as string,\n\t\tTotal_Quantity as string,\n\t\tTotal_Value as string,\n\t\tStDev_Quantity as string,\n\t\tStDev_Value as string,\n\t\tAvgTimeDelta as string,\n\t\tRecency as string,\n\t\tUnique_TransactionId as string,\n\t\tUnique_ItemId as string,\n\t\tUnique_Location as string,\n\t\tUnique_ProductCategory as string,\n\t\tTotal_Quantity_per_Unique_TransactionId as string,\n\t\tTotal_Quantity_per_Unique_ItemId as string,\n\t\tTotal_Quantity_per_Unique_Location as string,\n\t\tTotal_Quantity_per_Unique_ProductCategory as string,\n\t\tTotal_Value_per_Unique_TransactionId as string,\n\t\tTotal_Value_per_Unique_ItemId as string,\n\t\tTotal_Value_per_Unique_Location as string,\n\t\tTotal_Value_per_Unique_ProductCategory as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tpartitionBy('roundRobin', 2)) ~> source1\nsource1 derive(Label = case(Label == 'Churner',1,0)) ~> DerivedColumn1\nDerivedColumn1 sink(input(\n\t\tUserId as integer,\n\t\tAge as string,\n\t\tAddress as string,\n\t\tGender as string,\n\t\tUserType as string,\n\t\tLabel as string,\n\t\tTotal_Quantity as integer,\n\t\tTotal_Value as integer,\n\t\tStDev_Quantity as double,\n\t\tStDev_Value as double,\n\t\tAvgTimeDelta as double,\n\t\tRecency as integer,\n\t\tUnique_TransactionId as integer,\n\t\tUnique_ItemId as integer,\n\t\tUnique_Location as integer,\n\t\tUnique_ProductCategory as integer,\n\t\tTotal_Quantity_per_Unique_TransactionId as double,\n\t\tTotal_Quantity_per_Unique_ItemId as double,\n\t\tTotal_Quantity_per_Unique_Location as double,\n\t\tTotal_Quantity_per_Unique_ProductCategory as double,\n\t\tTotal_Value_per_Unique_TransactionId as double,\n\t\tTotal_Value_per_Unique_ItemId as double,\n\t\tTotal_Value_per_Unique_Location as double,\n\t\tTotal_Value_per_Unique_ProductCategory as double\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tmapColumn(\n\t\tAge,\n\t\tAddress,\n\t\tGender,\n\t\tUserType,\n\t\tLabel,\n\t\tTotal_Quantity,\n\t\tTotal_Value,\n\t\tStDev_Quantity,\n\t\tStDev_Value,\n\t\tAvgTimeDelta,\n\t\tRecency,\n\t\tUnique_TransactionId,\n\t\tUnique_ItemId,\n\t\tUnique_Location,\n\t\tUnique_ProductCategory,\n\t\tTotal_Quantity_per_Unique_TransactionId,\n\t\tTotal_Quantity_per_Unique_ItemId,\n\t\tTotal_Quantity_per_Unique_Location,\n\t\tTotal_Quantity_per_Unique_ProductCategory,\n\t\tTotal_Value_per_Unique_TransactionId,\n\t\tTotal_Value_per_Unique_ItemId,\n\t\tTotal_Value_per_Unique_Location,\n\t\tTotal_Value_per_Unique_ProductCategory,\n\t\tUserId\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sink1"
				}
			},
			"dependsOn": [
				"[variables('factoryId')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText3')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable4')]"
			]
		},
		{
			"name": "[parameters('factoryName')]",
			"type": "Microsoft.DataFactory/factories",
			"apiVersion": "2018-06-01",
			"properties": {
				"globalParameters": {
					"DEMO": {
						"type": "string",
						"value": "[parameters('dataFactory_properties_globalParameters_DEMO_value')]"
					},
					"demo2": {
						"type": "string",
						"value": "[parameters('dataFactory_properties_globalParameters_demo2_value')]"
					}
				}
			},
			"dependsOn": [],
			"location": "[parameters('dataFactory_location')]"
		}
	]
}